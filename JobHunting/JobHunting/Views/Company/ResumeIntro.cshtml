@model JobHunting.ViewModel.ResumeIDViewModel
@{
    ViewData["Title"] = @Html.DisplayFor(model => model.Title);
}
@section Styles {
    <style></style>
}
<head>
    <link rel="icon" type="image/x-icon" href="~/resumeInrro/assets/img/favicon.ico" />
    <!-- Font Awesome icons (free version)-->
    <script src="https://use.fontawesome.com/releases/v6.3.0/js/all.js" crossorigin="anonymous"></script>
    <!-- Core theme CSS (includes Bootstrap)-->
    <link href="~/resumeInrro/css/styles.css" rel="stylesheet" />
</head>

<div id="page-top">
    <!-- Navigation-->
    <nav class="navbar navbar-expand-lg navbar-dark bg-warning fixed-top" id="sideNav" style="flex-direction:column">
        <a class="navbar-brand js-scroll-trigger" href="#page-top">
            <span class="d-block d-lg-none">Clarence Taylor</span>
            <span class="d-none d-lg-block"><img class="img-fluid img-profile rounded-circle mx-auto mb-2" :src=`${baseAddress}/Company/GetPicture/${resumeId}`  alt="..." /></span>
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation"><span class="navbar-toggler-icon"></span></button>
        <div class="collapse navbar-collapse" id="navbarResponsive">
            <ul class="navbar-nav">
                <li class="nav-item"><a class="nav-link js-scroll-trigger" href="#personalData">個人資料</a></li>
                <li class="nav-item"><a class="nav-link js-scroll-trigger" href="#introduceYourself">自我介紹</a></li>
                <li class="nav-item"><a class="nav-link js-scroll-trigger" href="#workExperience">工作經驗</a></li>

                <li class="nav-item"><a class="nav-link js-scroll-trigger" href="#jobRequirements">求職條件</a></li>
                <li class="nav-item"><a class="nav-link js-scroll-trigger" href="#autobiography">自傳</a></li>
                <li v-for="item in resumeList">
                    <template v-if="memberRole == 'company'">
                        <button type="button" class="btn btn-primary btn-sm mx-2" data-bs-toggle="modal"
                                data-bs-target="#interviewMailBtn" style="color:white" v-on:click="getOpenings">
                            面試
                        </button>
                        <template v-if="item.likeYN == false">
                            <button type="button" class="btn btn-primary btn-sm" v-on:click="addFavorite" style="color:white">
                                暫存
                            </button>
                        </template>
                        <template v-else>
                            <button class="btn btn-outline-danger btn-sm" v-on:click="deleteFavorite()">已存</button>
                        </template>
                    </template>
                </li>
            </ul>

        </div>
    </nav>

    <!-- Page Content-->
    <div class="card-body container-fluid row" v-for="item in resumeList">
        <div class="row mt-3" style="margin-left:10px">
            <div class="col-sm-6 mt-5">
                <div class="card mb-3">
                    <div class="card-body" id="personalData">
                        <h5 class="card-title" style="text-align:center">個人資料</h5>
                        <div class="text-start" style="">
                            <p class="card-text ">
                                <div class="row">
                                    <div class="col-6">
                                        <label class="mb-2 fw-bold">姓名 : </label><label class="ms-2">{{item.name}}</label>
                                    </div>
                                    <div class="col-6">
                                        <label for="" class="mb-2 fw-bold">性別 : </label><label class="ms-2">{{selectSex(item.sex)}}</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-6">
                                        <label for="" class="mb-2 fw-bold">年齡 : </label><label class="ms-2">{{item.age}}歲</label>
                                    </div>
                                    <div class="col-6">
                                        <label for="" class="mb-2 fw-bold">電話 : </label><label class="ms-2">{{item.phone}}</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-6">
                                        <label for="" class="mb-2 fw-bold">學歷 : </label><label class="ms-2">{{item.degree}}</label>
                                    </div>
                                    <div class="col-6">
                                        <label for="" class="mb-2 fw-bold">郵件 : </label><label class="ms-2">{{item.email}}</label>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-6">
                                        <label for="" class="mb-2 fw-bold">就業狀態 : </label><label class="ms-2">{{item.employmentStatus}}</label>
                                    </div>
                                    <div class="col-6">
                                        <label for="" class="mb-2 fw-bold">兵役狀態 :</label><label class="ms-2">{{item.militaryService}}</label>
                                    </div>
                                </div>
                                <div class="card-body " id="introduceYourself">
                                    <h5 class="card-title text-center" style="">自我介紹：</h5>
                                    <p class="card-text form-control overflow-auto" style="height:200px">
                                        {{item.intro}}
                                    </p>
                                </div>
                            </p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="card mb-3 mt-5">
                    <div class="card-body text-start" id="autobiography">
                        <h5 class="card-title" style="text-align:center">自傳</h5>
                        <p class="card-text form-control overflow-auto" style="height:415px">
                            {{item.autobiography}}
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <div class="row" style="margin-left:10px">
            <div class="col-sm-6">
                <div class="card mb-3">
                    <div class="card-body text-start" id="jobRequirements" style="height:260px">
                        <h5 class="card-title" style="text-align:center;">求職條件</h5>
                        <p class="card-text">
                            <div class="col">
                                <label class="mb-2 fw-bold">上班時段: </label><label class="ms-2">{{item.wishTime}}</label>
                            </div>
                            <div class="col">
                                <label class="mb-2" >
                                    <label class="fw-bold">希望職缺: </label><label class="ms-2" v-for="(title,index) in item.titleObj">{{title.titleClassName}}<span v-if="index < item.titleObj.length-1">、</span></label>
                                </label>
                            </div>
                            <div class="col">
                                <label class="mb-2 fw-bold">希望上班地點: </label><label class="ms-2">{{item.wishAddress}}</label>
                            </div>
                            <div class="col">
                                <label for="" class="mb-2 fw-bold">
                                    證照 :
                                </label>
                                <label v-for="(certifications,index) in item.fileName"> <a :href=`${baseAddress}/Company/DownloadFile/?resumeId=${resumeId}&certificationId=${certifications.certificationId}`>{{certifications.certificationName}}</a><span v-if="index < item.fileName.length-1">、</span></label>
                            </div>
                            <div>
                                <label for="" class="mb-2 fw-bold">能力標籤:  </label><label class="ms-2"></label>
                                <label class="" v-for="(tag,index) in item.tagObj">{{tag.tagName}} <span v-if="index < item.tagObj.length-1">、</span></label>
                            </div>
                        </p>

                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="card mb-3">
                    <div class="card-body text-start" id="workExperience">
                        <h5 class="card-title" style="text-align:center">工作經驗</h5>
                        <p class="card-text form-control overflow-auto" style="height:195px">
                            {{item.workExperience}}
                        </p>
                    </div>
                </div>
            </div>
            

        </div>
    </div>
    @* 發送面試通知 *@
    <div class="modal fade" id="interviewMailBtn" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog"
         aria-labelledby="modalTitleId " aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <h3 class="CompanyNameh3 text-center" style="width:95%">面試通知</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="container bg-light" style="border-radius: 30px;width: 100%;">
                        <div class="inputOutAreas">
                            <div class="d-sm-flex my-1 py-3 inputAreas justify-content-around">
                                <label for=" inputCompanyName" class="col-sm-2 col-form-label labelDate">選擇職缺：</label>
                                <select v-model="selectedOpening">
                                    <option v-for="(item,index) in openings" :key="item.openingId" :value="item">{{item.title}}</option>
                                </select>
                            </div>
                            <div class="d-sm-flex my-1 py-3 inputAreas justify-content-around">
                                <label for=" inputCompanyName" class="col-sm-2 col-form-label labelDate">日期：</label>
                                <input type="date" class="form-control inputDate" v-model="date" :min="minDate">
                            </div>
                            <div class="d-sm-flex my-1 py-3 inputAreas justify-content-around">
                                <label for=" inputCompanyName" class="col-sm-2 col-form-label labelTime">時間：</label>
                                <input type="time" class="form-control inputTime" v-model="time">
                            </div>
                            <div class="d-sm-flex my-1 py-3 inputAreas justify-content-around">
                                <label for=" inputCompanyName" class="col-sm-2 col-form-label labelPlace">地點：</label>
                                <input type="text" class="form-control inputPlace" v-model="address">
                            </div>
                            <div class="d-sm-flex my-1 py-3 inputAreas justify-content-around">
                                <label for=" inputCompanyName" class="col-sm-2 col-form-label labelText">主旨﹕</label>
                                <input type="text" class="form-control inputSubjectLine" v-model="subjectLine">
                            </div>
                            <div class="d-sm-flex my-1 py-3 inputAreas justify-content-around">
                                <label for=" inputCompanyName" class="col-sm-2 col-form-label labelText">訊息﹕</label>
                                <textarea class="form-control " style="height:150px" name="錄用通知訊息" v-model="content"></textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer bg-warning">
                    <button type="submit" class="btn btn-outline-secondary" v-on:click="sendLetter()" data-bs-dismiss="modal">發送</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Bootstrap core JS-->
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.7.4/axios.min.js" integrity="sha512-6VJrgykcg/InSIutW2biLwA1Wyq+7bZmMivHw19fI+ycW0jIjsadm8wKQQLlfv3YUS4owfMDlZU38NtaAK6fSg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <!-- Core theme JS-->
    <script src="js/scripts.js"></script>
    <script>
        let vueList = {
            data() {
                return {
                    resumeId: "@Html.DisplayFor(model => model.ResumeId)",
                    candidateId: "@Html.DisplayFor(model => model.CandidateId)",
                    resumeList: [],
                    openings: [],
                    openingId: "",
                    date: "",
                    time: "",
                    address: "",
                    subjectLine: "",
                    content: "",
                    baseAddress: "https://localhost:7169",
                    // baseAddress: "https://duckjobhunting.azurewebsites.net",
                    minDate: '',
                    memberRole:"",
                    selectedItem: {},
                };
            },
            methods: {
                convertTimeOnly(timeString) {
                    if (!timeString) return null;
                    const [hours, minutes] = timeString.split(':');
                    if (!hours || !minutes) return null;
                    const date = new Date();
                    date.setHours(hours, minutes);
                    return date.toTimeString().split(' ')[0];
                },
                sendLetter() {
                    let self = this;
                    let request = {
                        ResumeId: self.resumeId,
                        CandidateId: self.candidateId,
                        OpeningId: self.selectedOpening.openingId,
                        AppointmentDate: self.date,
                        AppointmentTime: "",
                        Status: "面試邀請",
                        Address: self.address,
                        SubjectLine: self.subjectLine,
                        Content: self.content,
                        OpeningTitle: self.selectedOpening.title,
                    };
                    request.AppointmentTime = self.convertTimeOnly(self.time);
                    axios.post('@Url.Action("AddInterview", "Company")', request, {
                        headers: { 'Content-Type': 'application/json' },
                    }).then(res => {
                        alert(res.data)
                    }).catch(error => {
                        console.error(error);
                    })
                },
                getResumeList() {
                    let self = this;
                    axios.get('@Url.Action("ResumeDetail", "Company")', {
                        params: {
                            resumeID: self.resumeId,
                        },
                        headers: { 'Content-Type': 'application/json' },
                    }).then(res => {
                        self.resumeList = res.data
                    }).catch(error => {
                        console.error(error);
                    })
                },
                addFavorite() {
                    let self = this;
                    request = {
                        resumeId: self.resumeId
                    };
                    axios.post('@Url.Action("AddFavorite", "Company")', request, {
                        headers: { 'Content-Type': 'application/json' },
                    }).then(res => {
                        alert(res.data);
                        self.getResumeList();
                    }).catch(error => {
                        console.error(error);
                    })
                },
                deleteFavorite() {
                    let self = this;
                    let request = {
                        ResumeId: self.resumeId,
                    };
                    axios.post('@Url.Action("DeleteFavorite", "Company")', request, {
                        headers: { 'Content-Type': 'application/json' },
                    }).then(res => {
                        alert(res.data)
                        self.getResumeList();
                    }).catch(error => {
                        console.error(error);
                    })
                },

                getOpenings() {
                    let self = this;
                    axios.get('@Url.Action("GetOpenings", "Company")', {
                        headers: { 'Content-Type': 'application/json' },
                    }).then(res => {
                        if (res.data.length == 0) {
                            alert("請新增至少一筆職缺")
                            window.location.href = '@Url.Action("Index", "Openings", new { area = "Companies" })'
                        }
                        else {
                            self.openings = res.data;
                        }
                    }).catch(error => {
                        console.error(error);
                    })
                },
                selectSex(item) {
                    return item == true ? "男" : "女";
                },
                getRole() {
                    let self = this;
                    axios({
                        method: 'get',
                        url: `${self.baseAddress}/Home/GetRole`,
                    })
                        .then(function (response) {
                            self.memberRole = response.data;
                    })
                        .catch(function (error) {
                                console.log(error);
                    });
                 },
            },
            mounted() {
                let self = this;
                // self.getOpenings();
                self.getResumeList();
                const today = new Date().toISOString().split('T')[0];
                self.minDate = today;
                self.getRole();
            },
        };
        let app3 = Vue.createApp(vueList).mount("#page-top")
    </script>
}
