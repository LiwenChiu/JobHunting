@{
    ViewData["Title"] = "履歷瀏覽";
}

@section Styles {

}
<div id="app2" class="">
    <!-- Header-->
    <header class="bg-warning py-5">
        <div class="container px-4 px-lg-5 my-5">
            <div class="text-center text-white">
                @* <h1 class="display-4 fw-bolder">Home Page</h1> *@
                <label style="font-size:700%;">小鴨<img src="~/gif/9e25a15f2aae61fb18f7782b65b6baf7.gif" style="width:30%;" />上工</label>
            </div>
        </div>
    </header>
    <br />
    <br />
    @* 搜尋列 *@
    <div class="container border border-2 col-10 mb-4">
        <div class="row calculator-dropdown py-md-2">
            <div class="col-sm-3">
                <label class="calculator-dropdown-label" for="apiChoice">地區篩選</label>
                <select v-model="city" v-on:change="getArea">
                    <option v-for="(item,index) in cityList" :key="item.CityName" :value="item.CityName">{{item.CityName}}</option>
                </select>
                <select v-model="areaName">
                    <option v-for="item in area" :value="item.AreaName">{{item.AreaName}}</option>
                </select>
            </div>
            <div class="col-sm-3">
                <label class="calculator-dropdown-label" for="apiChoice">技能類別</label>
                <select v-model="skill">
                    <optgroup v-for="(item,index) in tagClasses" :label="item.tagClassName">
                        <option v-for="tag in tagClasses[index].tagObj" :value="tag.tagId">{{tag.tagName}}</option>
                    </optgroup>
                </select>
            </div>
            <div class="col-sm-3">
                <label class="calculator-dropdown-label" for="apiChoice">學歷</label>
                <select class="select" v-model="edu" style="width:150px;height:30px">
                    <option v-for="item in allDegree" :value="item">{{item}}</option>
                </select>
            </div>
            <div class="col-sm-3">
                <button class="btn btn-warning text-light" v-on:click="cancelSelect()">清空</button>
            </div>
        </div>
        <div class="row py-md-2">
            <div class="col-10 mb-0">
                <input type="text" class="form-control" placeholder="請輸入關鍵字" v-on:keyup.lazy="filterResumes" v-model="filter" />
            </div>
            <div class="col-2 mb-0">
                <button class="btn btn-warning text-light" v-on:click="filterResumes">搜尋</button>
            </div>
        </div>
    </div>

    <br />
    @* ----------上方換頁------------------- *@
    <div class="container text-center">
        <div class="row ">
            <div class="col-sm-2 row">
                <div class="col-sm-6 ms-auto">
                    <label>第</label>
                    <select v-model="currentPageNow" v-on:change="setPage(currentPageNow)">
                        <option v-for="page in totalPage" :value="page">{{page}}</option>
                    </select>
                    <label>頁</label>
                </div>
            </div>
            <div class="col-sm-8">
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-center">
                        <li class="page-item" v-on:click="setPage(currentPageNow-1)">
                            <a class="page-link" href="#homeList" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        <li v-for="item in totalPage" class="page-item" v-on:click="setPage(item)">
                            <a class="page-link" href="#homeList">{{item}}</a>
                        </li>
                        <li class="page-item" v-on:click="setPage(currentPageNow+1)">
                            <a class="page-link" href="#homeList" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
            <div class="col-sm-2 ms-auto row">
                <div class="col-sm-10">
                    <label>一頁</label>
                    <input style="width:3vh;" v-on:change="filterResumes" v-model.number.trim="perpage" />
                    <label>筆</label>
                </div>
            </div>
        </div>
    </div>
    
    @* 履歷清單 *@
    <div id="homeList" class="container">
        <table class="table table-striped table-hover">
            <thead id="listHeader" class="table-warning" align="center">
                <tr>
                    <td>姓名</td>
                    <td>年紀</td>
                    <td>性別</td>
                    <td>學歷</td>
                    <td>技能</td>
                    <td>所在地</td>
                    <td></td>
                </tr>

            </thead>
            <tbody id="listItem" align="center">
                <tr v-for="(item,index) in resumes">
                    <td><a target="_blank" :href=`${baseAddress}/Company/ResumeIntro/?candidateId=${item.candidateID}&resumeId=${item.resumeID}`>{{item.name}}</a></td>
                    <td>{{item.age}}歲</td>
                    <td>{{selectSex(item.sex)}}</td>
                    <td>{{item.degree}}</td>
                    <td><p v-for="data in item.tagObj">{{data.tagName}}</p></td>
                    <td>{{item.address}}</td>
                    <td><button class="btn btn-info" data-bs-toggle="modal" :data-bs-target="'#'+mergeID(item)">預覽</button></td>
                </tr>
            </tbody>
        </table>
        <div>
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    <li class="page-item" v-on:click="setPage(currentPageNow-1)">
                        <a class="page-link" href="#homeList" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    <li v-for="item in totalPage" class="page-item" v-on:click="setPage(item)">
                        <a class="page-link" href="#homeList">{{item}}</a>
                    </li>
                    <li class="page-item" v-on:click="setPage(currentPageNow+1)">
                        <a class="page-link" href="#homeList" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
    <div v-for="item in resumes" class="modal fade"
         :id="mergeID(item)"
         tabindex="-1"
         data-bs-backdrop="static"
         data-bs-keyboard="false"
         role="dialog"
         aria-labelledby="modalTitleId"
         aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <button type="button"
                            class="btn-close"
                            data-bs-dismiss="modal"
                            aria-label="Close"
                            style="width:5% ;">
                    </button>
                </div>
                <div class="modal-body " style="background-color: #f7d179">
                    <div class="row">
                        <div class="col-sm-5 ">
                            <div class="row text-center">
                                <h5>個人資料</h5>
                                <div class="col-12 col-sm-12">
                                    <label>{{item.name}}</label>
                                </div>
                                <div class="col-12 col-sm-12">
                                    <label>性別:{{selectSex(item.sex)}}</label>
                                </div>
                                <div class="col-12 col-sm-12">
                                    學歷:{{item.degree}}
                                </div>
                                <h6 class="text-center">專業技能</h6>
                                <div class="col-12 col-sm-12" v-for="data in item.tagObj">
                                    {{data.tagName}}
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-7 ">
                            <div class="row">
                                <h5 class="text-center">簡介</h5>
                                <div class="col-12 col-sm-12">
                                    <p>{{item.intro}}</p>
                                </div>
                                <h5 class="text-center">工作經驗</h5>
                                <div class="col-12 col-sm-12">
                                    <p>{{item.workExperience}}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer bg-warning">
                    <template v-if="memberRole == 'company'">
                        <template v-if="item.likeYN == false">
                        <button class="btn btn-danger" v-on:click="addFavorite(item.resumeID)">儲存</button>
                        </template>
                        <template v-else>
                        <button class="btn btn-outline-danger" v-on:click="deleteFavorite(item.resumeID)">已存</button>
                        </template>
                    </template>
                    <button type="button" class="btn btn-primary" v-on:click="goToPage(item)">詳細</button>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.7.4/axios.min.js" integrity="sha512-6VJrgykcg/InSIutW2biLwA1Wyq+7bZmMivHw19fI+ycW0jIjsadm8wKQQLlfv3YUS4owfMDlZU38NtaAK6fSg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script>
        let vueList = {
            data() {
                return {
                    area: [],
                    skill: null,
                    edu: "",
                    filter: "",
                    resumes: [],
                    filteredResume:[],
                    tagClasses: [],
                    perpage: 5, //一頁的資料數
                    totalPage: null,
                    currentPage: 1,
                    currentPageNow: null,
                    resumesCount:null,
                    cityList:[],
                    city:"",
                    areaName: "",
                    cancel: false,
                    baseAddress: "https://localhost:7169",
                    // baseAddress: "https://duckjobhunting.azurewebsites.net",
                    memberRole: ""
                };
            },
            methods: {
                goToPage(item){                  //開啟履歷新視窗
                    window.open(`${this.baseAddress}/Company/ResumeIntro/?candidateId=${item.candidateID}&resumeId=${item.resumeID}`)
                },
                cancelSelect(){      //取消篩選條件
                    let self = this;
                    self.filter = self.city = self.areaName = self.edu = "", self.skill = null;
                    self.filterResumes();
                },
                selectSex(item) {
                    return item == true ? "男" : "女";
                },
                mergeID(item) {    //產生個別履歷唯一modal的ID
                    let str = item.name.replace(/\s/g, "");
                    let num = item.resumeID;
                    strID = "Id" + str + num;
                    return strID;
                },
                setPage(page) {     //當按到第幾頁顯示的資料
                    if (page <= 0 || page > this.totalPage) {
                        return
                    }
                    this.currentPage = page
                    this.filterResumes();
                },
                filterResumes() {
                    let self = this;
                    self.currentPageNow = self.currentPage == null || self.currentPage == "" ? 1 : self.currentPage;
                    let today = new Date().getFullYear();
                    var request = {
                        perpage: self.perpage,
                        currentpage: self.currentPageNow,
                        sex:null,
                        searchText: self.filter,
                        areaName: self.city + self.areaName,
                        edu: self.edu,
                        skill: self.skill
                    };
                    if (self.filter === "男") {
                    request.sex = true;
                    }
                    else if (self.filter === "女") {
                        request.sex = false;
                    }
                    else {
                        request.sex = null;
                    }
                    axios.post(`${self.baseAddress}/Company/SelectIndexList`, request, {
                                headers: { 'Content-Type': 'application/json' },
                            }).then(res => {
                                self.resumes = res.data.resumeOutput;
                                self.resumesCount = res.data.totalDataCount;
                                self.totalPage = Math.ceil(res.data.totalDataCount / self.perpage);
                                self.currentPage = 1;
                            }).catch(err => JSON.stringify(err))
                },
                addFavorite(item) {
                    let self = this;
                    request = {
                        resumeId: item,
                    };
                    axios.post(`${self.baseAddress}/Company/AddFavorite`, request, {
                        headers: { 'Content-Type': 'application/json' },
                    }).then(res => {
                        alert(res.data);
                        self.filterResumes();
                    }).catch(error => {
                        console.error(error);
                    })
                },
                deleteFavorite(item) {
                    let self = this;
                    let request = {
                        resumeId: item,
                    };
                    axios.post(`${self.baseAddress}/Company/DeleteFavorite`, request, {
                        headers: { 'Content-Type': 'application/json' },
                    }).then(res => {
                        alert(res.data);
                        self.filterResumes();
                    }).catch(error => {
                        console.error(error);
                    })
                },
                getTag() {    //抓到技能標籤下拉選單值
                    let self = this;
                    axios.get(`${self.baseAddress}/Company/TagClasses`)  
                        .then(model => {
                            self.tagClasses = model.data;
                        })
                        .catch(function (error) {
                            console.error(error);
                        });
                },
                getCity(){    
                    axios.get('/cityjson/CityCountyData.json')  //根目錄資料
                        .then(model => {
                            this.cityList = model.data;
                        })
                        .catch(function (error) {
                            console.error(error);
                        });
                },
                getArea(){        //選到哪個縣市顯示該縣市個別的區
                    this.area = this.cityList.find(x => x.CityName === this.city).AreaList;
                },
                getDegree(){
                    let self = this;
                    axios.get(`${self.baseAddress}/Company/EduSelectInput`)
                        .then(model => {
                            self.allDegree = model.data.map(x => x.degree).filter((value, index, self) => value && self.indexOf(value) === index);;
                        })
                        .catch(function (error) {
                            console.error(error);
                        });
                },
                getRole () {
                    let self = this;
                    axios({
                        method: 'get',
                        url: `${self.baseAddress}/Home/GetRole`,
                    })
                        .then(function (response) {
                            self.memberRole = response.data;
                        })
                        .catch(function (error) {
                            console.log(error);
                        });
                },
            },
            mounted() {
                this.getTag();
                this.getCity();
                this.filterResumes();
                this.getDegree();
                this.getRole();
            }
        };
        let vacancies = Vue.createApp(vueList).mount("#app2");
    </script>
}