@{
    ViewData["Title"] = "應徵訊息";
}

@section Styles
{
    <style>
        .card{
            overflow:hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
    </style>
}

<div id="NotificationsVue">

    <div class="selectbutton text-center pt-2">
        <button type="button" class="btn btn-outline-danger btn-sm mx-3" v-on:click="filterInput = '面試邀請';">面試邀請</button>
        <button type="button" class="btn btn-outline-danger btn-sm mx-3" v-on:click="filterInput = '錄取通知';">錄取通知</button>
        <input type="text" class="" placeholder="搜尋關鍵字" v-model.trim="filterInput" />
        <button type="button" class="btn btn-warning text-light btn-sm mx-1" v-on:click="filterInput = '';">清空</button>
    </div>

    <template v-if="notifications.length > 0">
        <div class="container-fluid py-1">
            <div class="letters row" style="height:77vh">

                <template v-for="notification in notifications">
                    <div class="col-md-3 mb-1">
                        <div class="card" style="width: 15rem; height: 15rem;">
                            <template v-if="notification.replyYN === true">
                                <div class="card-header text-center bg-warning row">
                                    <div class="col-sm-10">
                                        <span class="card-title">{{notification.status}}</span>
                                    </div>
                                    <div class="col-sm-2">
                                        <button type="button" class="astext" data-bs-toggle="modal" data-bs-target="#deleteNotification" v-on:click="deleteNotificationId = notification.notificationId"><i class="fa-solid fa-trash"></i></button>
                                    </div>
                                </div>
                            </template>
                            <template v-else>
                                <div class="card-header text-center row">
                                    <div class="col-sm-10">
                                        <span class="card-title">{{notification.status}}</span>
                                    </div>
                                    <div class="col-sm-2">
                                        <button type="button" class="astext" data-bs-toggle="modal" data-bs-target="#deleteNotification" v-on:click="deleteNotificationId = notification.notificationId"><i class="fa-solid fa-trash"></i></button>
                                    </div>
                                </div>
                            </template>
                            <div class="card-body">
                                <span class="card-text"><i class="fa-solid fa-caret-right"></i> 收件人: {{notification.candidateName}}</span><br />
                                <span class="card-text"><i class="fa-solid fa-caret-right"></i> 主旨: {{notification.subjectLine}}</span><br />
                                <span class="card-text"><i class="fa-solid fa-caret-right"></i> 日期: {{notification.appointmentDate}}</span>
                            </div>
                            <div class="card-footer text-center">
                                <button type="button" class="btn btn-primary btn-md" data-bs-toggle="modal" data-bs-target="#modalId" v-on:click="showModal(notification.notificationId)">
                                    查看
                                </button>
                            </div>
                        </div>
                    </div>
                </template>
            </div>

            <div>

                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center" style="margin: 0;">
                        <li class="page-item">
                            <button class="page-link" aria-label="Previous" v-on:click="turnPagePrevious()">
                                <span aria-hidden="true">&laquo;</span>
                            </button>
                        </li>
                        <template v-for="page in totalPage">
                            <li class="page-item"><button type="button" class="page-link" v-on:click="turnPage(page)">{{page}}</button></li>
                        </template>
                        <li class="page-item">
                            <button class="page-link" aria-label="Next" v-on:click="turnPageNext()">
                                <span aria-hidden="true">&raquo;</span>
                            </button>
                        </li>
                    </ul>
                </nav>

            </div>

        </div>
    </template>
    
    <template v-else>
        <div class="spinner-border text-warning" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </template>

    @* 錄取狀態modal *@
    <div class="modal fade" id="modalId" tabindex="-1" data-bs-keyboard="false" role="dialog"
         aria-labelledby="modalTitleId" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-md" role="document">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <template v-if="notificationModal.status == '面試邀請'">
                        <h3 class="CompanyNameh3 text-center text-light">面試邀請</h3>
                    </template>
                    <template v-else>
                        <h3 class="CompanyNameh3 text-center text-light">錄用通知</h3>
                    </template>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="container bg-light" style="border-radius: 30px;width: 100%;">
                        <div class="inputOutAreas">
                            <div class="inputAreas justify-content-around">
                                <label for=" inputCompanyName" class="">主旨：</label>
                                <p>{{notificationModal.subjectLine}}</p>
                            </div>
                            <div class="inputAreas justify-content-around">
                                <label for=" inputCompanyName" class="">日期：</label>
                                <p>{{notificationModal.appointmentDate}}</p>
                            </div>
                            <div class="inputAreas justify-content-around">
                                <label for=" inputCompanyName" class="">時間：</label>
                                <p>{{notificationModal.appointmentTime}}</p>
                            </div>
                            <div class="inputAreas justify-content-around">
                                <label for=" inputCompanyName" class="">地點：</label>
                                <p>{{notificationModal.Address}}</p>
                            </div>
                            <p>您好，{{notificationModal.candidateName}}，我們是{{notificationModal.companyName}}</p>
                            <p>履歷:{{notificationModal.resumeTitle}}，職缺:{{notificationModal.openingTitle}}</p>
                            <div class="inputAreas justify-content-around">
                                <label for=" inputCompanyName" class="">訊息﹕</label>
                                <p>{{notificationModal.content}}</p>
                            </div>
                        </div>
                        <template v-if="notificationModal.replyFirstYN === true">
                            <div class="container d-grid">
                                <label class="h5">求職者回覆:</label>
                                <hr>
                                <template v-if="notificationModal.replyYN === true">
                                    <template v-if="notificationModal.status == '面試邀請'">
                                        <div class="row-3">
                                            <span>是否接受面試 :</span>
                                            <span class="bg-secondary text-light rounded-pill px-2" style="width:auto">{{InterviewynHireyn(notificationModal.interviewYN)}}</span>
                                        </div>
                                        
                                    </template>
                                    <template v-else>
                                        <div class="row-3">
                                            <span>是否接受錄取 : </span>
                                            <span class="bg-secondary text-light rounded-pill px-2" style="width:auto">{{InterviewynHireyn(notificationModal.hireYN)}}</span>
                                        </div>
                                    </template>
                                        
                                        


                                    <button class="btn btn-warning text-light" v-on:click="confirmReply()">確認回覆</button>
                                </template>
                                <div class="border border-3"><p>{{notificationModal.reply}}</p></div>
                            </div>
                        </template>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#deleteNotification" v-on:click="deleteNotificationId = notificationModal.notificationId">刪除</button>
                </div>
            </div>
        </div>
    </div>

    @* 確認刪除NotificationModal *@
    <div class="modal fade" id="deleteNotification" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteNotificationLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h4 class="modal-title text-light" id="deleteNotificationLabel">刪除信件</h4>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="deleteNotificationId = null"></button>
                </div>
                <div class="modal-body">
                    <h5>請問是否要刪除信件</h5>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" v-on:click="deleteNotification()">刪除</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="deleteNotificationId = null">取消</button>
                </div>
            </div>
        </div>
    </div>

</div>


@section Scripts
{
    <script>
        let vueAppNotifications = {
            data() {
                return {
                    //baseAddress: "https://duckjobhunting.azurewebsites.net",
                    baseAddress: "https://localhost:7169",
                    filterInput: null,
                    notifications: [],
                    notificationModal: {},
                    deleteNotificationId: null,
                    pageStart: 1,
                    totalDataCount: null,   //總共幾筆資料
                    totalPage: null,    //總共幾頁
                    ResumeOpeningRecordId: "",
                };
            },
            methods: {
                bootFilterPage: function () {
                    let request = {};
                    request.CompanyId = this.companyId;
                    request.filterInput = this.filterInput == null ? "" : this.filterInput;
                    request.pageStart = this.pageStart
                    axios.post(`${this.baseAddress}/Companies/Notifications/GetNotificationLess`, request, { 
                        headers: { 'Content-Type': 'application/json' } 
                    })
                        .then(response => {
                            this.notifications = response.data.companyNotificationsFilter;
                            this.totalDataCount = response.data.totalDataCount;
                            this.totalPage = Number.isInteger((response.data.totalDataCount) / 8) ? parseInt((response.data.totalDataCount) / 8) : parseInt((response.data.totalDataCount) / 8) + 1;
                        })
                        .catch(err => { alert(err) });
                },
                InterviewynHireyn(notificationModal) {
                    return notificationModal == true ? "同意" : "不同意";
                },

                showModal(notificationId) {
                    let request = {};
                    request.NotificationId = notificationId,
                        axios.post(`${this.baseAddress}/Companies/Notifications/GetNotification`, request, {
                            headers:{
                                'Content-Type':'application/json'
                            }
                        }).then(response => {
                            this.notificationModal = response.data;
                            this.interviewRadio = response.data.interviewYN;
                            this.HireRadio = response.data.hireYN;
                            this.ResumeOpeningRecordId = response.data.resumeOpeningRecordId;
                        })
                        .catch(err => { alert(err) });
                },
                confirmReply: function () {
                    let request = {};
                    request.NotificationId = this.notificationModal.notificationId;
                    axios.post(`${this.baseAddress}/Companies/Notifications/ConfirmReply`, request, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(() => {
                        this.bootFilterPage();
                        this.showModal(this.notificationModal.notificationId);
                    })
                    .catch(err => { alert(err) });
                },
                deleteNotification:function(){
                    let request = {};
                    request.NotificationId = this.deleteNotificationId;
                    axios.post(`${this.baseAddress}/Companies/Notifications/DeleteNotification`, request, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                    .then(() => {
                        this.bootFilterPage();
                    })
                    .catch(err => { alert(err) });
                },
                turnPage: function (page) {
                    this.pageStart = page;
                },
                turnPagePrevious: function () {
                    if (this.pageStart != 1) {
                        this.pageStart--;
                    }
                },
                turnPageNext: function () {
                    if (this.pageStart != this.totalPage) {
                        this.pageStart++;
                    }
                },
            },
            watch: {
                filterInput:function(){
                    this.bootFilterPage();
                },
                pageStart: function () {
                    this.bootFilterPage();
                },
            },
            mounted: function () {
                this.bootFilterPage();
            },
        };
        let app = Vue.createApp(vueAppNotifications).mount("#NotificationsVue")
    </script>
}