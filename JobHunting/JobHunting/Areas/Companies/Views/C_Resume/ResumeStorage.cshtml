@{
    ViewData["Title"] = "會員中心";
}
@section Styles
{
    <style>

    </style>
}
<div id="resumeStorage" class="mt-5">
    <div class="container-fluid py-2">
        <div class="letters row">
            <div class="col-md-3 mb-4" v-for="item in resumes.slice(pageStart,pageEnd)">
                <div class="card rounded-5" style="width: 15rem; height: 15rem;">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-10">
                                <span class="card-title pb-3">職缺:{{item.jobTitle}}</span>
                            </div>
                            <div class="col-2">
                                <button type="button" class="btn-close justify-content-end" disabled aria-label="Close"></button>
                            </div>
                        </div>
                        <p class="card-subtitle text-body-secondary mt-2"><i class="fa-solid fa-caret-right"></i> 姓名 :{{item.candidateName}}</p>
                        <span class="card-text"><i class="fa-solid fa-caret-right"></i> 性別 :{{selectSex(item.candidateSex)}}</span>
                        <p class="card-text"><i class="fa-solid fa-caret-right"></i> 學歷 :{{item.candidateDegree}}</p>
                        <p class="card-text"><i class="fa-solid fa-caret-right"></i> 就業狀態 :{{item.candidateEmpStatus}}</p>
                        <div class="text-center">
                            <partial name="_ResumeBtnModal">
                        </div>
                    </div>
                </div>
            </div>
            <div>
                <nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-center">
                        <li class="page-item" v-on:click="setPage(currentPage-1)">
                            <a class="page-link" href="#" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                        <li v-for="item in totalPage" class="page-item" v-on:click="setPage(item)">
                            <a class="page-link" href="#">{{item}}</a>
                        </li>
                        <li class="page-item" v-on:click="setPage(currentPage+1)">
                            <a class="page-link" href="#" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script>
        let VueApp = {
            data() {
                return {
                    pageStatus: 0,
                    perpage: 8, //一頁的資料數
                    currentPage: 1,
                    MessageStatus: 1,

                    resumes: [], //從後端撈回來的資料存入這邊
                    filter: "",

                    baseAddress: "https://localhost:7169",

                    isShow: false,
                    orderSelA: "",
                    orderSelB: "",
                    OrderDetail:
                        [
                            { Detail: "公司名稱" },
                            { Detail: "方案名稱" },
                            { Detail: "訂購日期" },
                            { Detail: "方案天數" },
                            { Detail: "付款狀態" },
                        ],
                };
            },
            computed: {
                totalPage() {
                    return Math.ceil(this.resumes.length / this.perpage)
                    //Math.ceil()取最小整數
                },
                pageStart() {
                    return (this.currentPage - 1) * this.perpage
                    //取得該頁第一個值的index
                },
                pageEnd() {
                    return this.currentPage * this.perpage
                    //取得該頁最後一個值的index
                }
            },
            methods: {
                setPage(page) {
                    if (page <= 0 || page > this.totalPage) {
                        return
                    }
                    this.currentPage = page
                },
                resumeStorageData: function () {
                    fetch("/companies/C_Resume/ResumeStorageJson", {
                        method: "GET",
                    }).then(response => {
                        return response.json();
                    })
                        .then(data => {
                            return this.resumes = data
                        }).catch(err => {
                            alert(JSON.stringify(err))
                        })
                },
                selectSex(item) {
                    return item == true ? '男' : '女'
                },
            },
            watch: {
                orderSelA: function (selval) {
                    this.orderSelB = selval
                }
            },
            //每次重新載入網頁時會自動初始化撈出資料
            mounted() {
                this.resumeStorageData();
            }
        }; let app = Vue.createApp(VueApp).mount("#resumeStorage");
    </script>
}