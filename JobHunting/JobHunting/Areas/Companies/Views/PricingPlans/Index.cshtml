@{
    ViewData["Title"] = "方案選擇";
}

@section Styles
{
    <style>

    </style>
}
<div id="PricingPlans" class="py-2">
    <h3 class="" align="center">方案選擇</h3>
    <div class="container" style="overflow-y:auto;height:73vh">
        <div class="container-fluid row" style="display:flex;align-items: center;justify-content: center;" v-for="plan in pricingPlans">
            <div class="col-11 pt-sm-1">
                <div class="card overcard">
                    <div class="card-body">
                        <div class="row row-cols-2 align-items-center">
                            <p class="col-sm-2">{{plan.title}}</p>
                            <button type="button" class="col-1 btn btn-outline-warning" data-bs-toggle="modal" data-bs-target="#Intro" v-on:click="clickedPlanIntro = plan.intro;">簡介</button>
                            <p class="col-sm-2">{{plan.duration}}天</p>
                            <p class="col-sm-2">${{plan.price}}</p>
                            <p class="col-sm-2">折扣: {{plan.discount*100}}%</p>
                            <button type="button" class="btn btn-warning col-sm-3 text-light" data-bs-toggle="modal" data-bs-target="#paymentAgreement" v-on:click="selectedPlanId = plan.planId;selectedPlanTitle = plan.title;selectedPlanPrice = plan.price; selectedPlanDiscount = plan.discount;">選擇</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid row py-2" style="display:flex;align-items: center;justify-content: center;">
        <div class="col-md-10">
            <label for="filterPlan" class="px-3">方案搜尋: </label>
            <input type="search" style="border-radius: 5px; width:70%;" placeholder="請輸入查詢關鍵字" v-model.trim="filterPlantext" v-on:keydown.enter.exact="bootFilterPage();" />
            <button class="btn btn-warning text-light" v-on:click="filterPlantext = '';bootFilterPage();">清除</button>
        </div>
    </div>

    @* 介紹 *@
    <div class="modal fade" id="Intro" data-bs-keyboard="false" tabindex="-1" aria-labelledby="IntroLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <h3 class="modal-title text-light" id="IntroLabel">方案介紹</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="h5" style="width:100%;word-break:break-all;">{{clickedPlanIntro}}</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                </div>
            </div>
        </div>
    </div>

    @* 購買方案Modal *@
    <div class="modal fade" id="paymentAgreement" data-bs-keyboard="false" tabindex="-1" aria-labelledby="paymentAgreementLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <h3 class="modal-title text-light" id="paymentAgreementLabel">請問是否要購買此方案</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="selectedPlanId = null;selectedPlanTitle = '';"></button>
                </div>
                <div class="modal-body">
                    <h5>方案: {{selectedPlanTitle}} </h5>
                    <template v-if="selectedPlanDiscount === 1">
                        <h5>應付金額: NT${{selectedPlanPrice}}</h5>
                    </template>
                    <template v-else>
                        <template v-if="(selectedPlanDiscount*100)%10 === 0">
                            <h5>應付金額: NT${{selectedPlanPrice}} × {{selectedPlanDiscount*10}}折 = NT${{selectedPlanPrice*selectedPlanDiscount}}</h5>
                        </template>
                        <template v-else>
                            <template v-if="selectedPlanDiscount*100 < 10">
                                <h5>應付金額: NT${{selectedPlanPrice}} × 0{{selectedPlanDiscount*100}}折 = NT${{selectedPlanPrice*selectedPlanDiscount}}</h5>
                            </template>
                            <template v-else>
                                <h5>應付金額: NT${{selectedPlanPrice}} × {{selectedPlanDiscount*100}}折 = NT${{selectedPlanPrice*selectedPlanDiscount}}</h5>
                            </template>
                        </template>
                    </template>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary text-light" data-bs-dismiss="modal" v-on:click="SendToNewebPay()">確認付款</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="selectedPlanId = null;selectedPlanTitle = '';">取消</button>
                </div>
            </div>
        </div>
    </div>

</div>



@section Scripts
{
    <script>
        let vueAppPricingPlans = {
            data() {
                return {
                    baseAddress: "https://localhost:7169",
                    CompanyId: 1,
                    filterPlantext: "",
                    pricingPlans: [],
                    clickedPlanIntro: "",
                    selectedPlanTitle: "",
                    selectedPlanId: null,
                    selectedPlanPrice: null,
                    selectedPlanDiscount: null,
                };
            },
            methods: {
                bootFilterPage: function () {
                    let request = {};
                    request.Title = this.filterPlantext
                    request.Intro = this.filterPlantext;
                    request.Duration = request.Price = (Number.isNaN(Number(this.filterPlantext)) ? -1 : Number(this.filterPlantext));
                    request.Discount = (Number.isNaN(Number(this.filterPlantext)) ? -1 : Number(this.filterPlantext)) / 100;
                    axios.post(`${this.baseAddress}/Companies/PricingPlans/BootFilterPage`, request, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => {
                        this.pricingPlans = response.data;
                    }).catch(err => { alert(err) });
                },
                // 傳送至藍新金流
                SendToNewebPay() {
                    var self = this;

                    // 方案Id
                    var postData = {};
                    postData['PlanId'] = self.selectedPlanId;

                    // 使用 axios 傳送至後端
                    axios.post(`${self.baseAddress}/Companies/PricingPlans/SendToNewebPay`, postData,{
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => {
                            const returnObj = response.data;

                            // 呼叫藍新金流 API
                            const form = document.createElement('form');
                            form.method = 'post';
                            form.action = 'https://ccore.newebpay.com/MPG/mpg_gateway'; // 藍新金流驗證網址(測試環境)
                            // form.action = 'https://core.newebpay.com/MPG/mpg_gateway'; // 藍新金流驗證網址(正式環境)

                            for (const key in returnObj) {
                                if (returnObj.hasOwnProperty(key)) {
                                    const hiddenField = document.createElement('input');
                                    hiddenField.type = 'hidden';
                                    hiddenField.name = key;
                                    hiddenField.value = returnObj[key];
                                    form.appendChild(hiddenField);
                                }
                            }
                            document.body.appendChild(form);
                            form.submit();
                        })
                        .catch(error => {
                            alert(error.response.status + " " + error.response.statusText + '\n' + error.response.data);
                        });
                },
            },
            watch: {
                filterPlantext: function () {
                    this.bootFilterPage();
                },
            },
            mounted: function () {
                this.bootFilterPage();
            },
        };
        let app = Vue.createApp(vueAppPricingPlans).mount("#PricingPlans");
    </script>
}