@{
    ViewData["Title"] = "訂單紀錄";
}

@section Styles
{
    <style>

    </style>
}


<div class="container tableOutside pt-1" id="appCompanyOrders">

    <div class="row">
        <h1 class="col-sm-9">最終日期: {{deadline}} 23點59分59秒</h1>
        <div class="col-sm-3">
            <input id="searchOrder" class="form-control" placeholder="搜尋關鍵字" v-model="searchOrderInput" />
        </div>
    </div>

    <div style="overflow-y:auto;height:81vh">
        <table id="orderTable" class="table table-striped table-hover">
            <thead>
                <tr>
                    <td>方案</td>
                    <td>天數</td>
                    <td>價格</td>
                    <td>下單時間</td>
                    <td>付款時間</td>
                    <td>付款狀態</td>
                    <td></td>
                </tr>
            </thead>
            <tbody>
                <tr v-for="order in orders">
                    <td>{{order.title}}</td>
                    <td>{{order.duration}}</td>
                    <td>{{order.price}}</td>
                    <td>{{order.orderDate}}</td>
                    <td>{{order.payDate == null ? "無" : order.payDate}}</td>
                    <td>{{order.statusType}}</td>
                    <td>
                        <template v-if="!order.status">
                            <button type="button" class="btn btn-danger text-light" v-on:click="SendToNewebPayCancel(order.orderId)">取消</button>
                        </template>
                        <template v-else>
                            <button type="button" class="btn btn-outline-secondary" v-on:click="SendToNewebPaySearch(order.orderId)">詳情</button>
                        </template>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    @* 詳情Modal *@
    <div class="modal fade" id="SearchModal" data-bs-keyboard="false" tabindex="-1" aria-labelledby="SearchModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <h3 class="modal-title text-light" id="SearchModalLabel">訂單資訊</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p class="h5" style="width:100%;word-break:break-all;">交易編號: {{searchData.tradeNo}}</p>
                    <p class="h5" style="width:100%;word-break:break-all;">訂單編號: {{searchData.orderId}}</p>
                    <p class="h5" style="width:100%;word-break:break-all;">方案: {{searchData.title}}</p>
                    <p class="h5" style="width:100%;word-break:break-all;">方案天數{{searchData.duration}}</p>
                    <p class="h5" style="width:100%;word-break:break-all;">價格: {{searchData.price}}</p>
                    <p class="h5" style="width:100%;word-break:break-all;">下單時間: {{searchData.orderdate}}</p>
                    <p class="h5" style="width:100%;word-break:break-all;">付款時間: {{searchData.payDate}}</p>
                    <p class="h5" style="width:100%;word-break:break-all;">訂單狀態: {{searchData.newebPayStatus}}</p>
                    <p class="h5" style="width:100%;word-break:break-all;">訂單訊息: {{searchData.newebPayMessage}}</p>
                    <p class="h5" style="width:100%;word-break:break-all;">付款方式: {{searchData.paymentType}}</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
                </div>
            </div>
        </div>
    </div>

</div>

@section Scripts
{
    <script>
        let vueAppCompanyOrders = {
            data() {
                return {
                    baseAddress: "https://localhost:7169",
                    orders: [],
                    deadline: null,
                    searchOrderInput: "",
                    searchData: [],
                }
            },
            computed: {},
            methods: {
                getCompanyOrders: function () {
                    let request = {};
                    request.Filter = this.searchOrderInput;
                    axios.post(`${this.baseAddress}/Companies/CompanyOrders/GetCompanyOrders`, request, {
                        headers: {
                            'Content-Type': 'application/json'
                        },
                    }).then(response => this.orders = response.data)
                        .catch(err => { alert(err) });

                    // 拿Companies裡的Deadline
                    axios.post(`${this.baseAddress}/Companies/CompanyOrders/GetDeadline`, {
                        headers: {
                            'Content-Type': 'application/json'
                        },
                    }).then(response => this.deadline = response.data == null ? "無" : response.data)
                        .catch(err => { alert(err) });
                },
                showDeadline() {
                    return this.deadline === null ? "請購買方案" : this.deadline;
                },
                SendToNewebPaySearch:function(orderId){
                    let self = this;

                    // 訂單Id
                    let postData = {};
                    postData['OrderId'] = orderId;

                    axios.post(`${self.baseAddress}/Companies/CompanyOrders/SendToNewebPaySearch`, postData,{
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => {
                        if (response.data.status) {
                            if (response.data.searchStatus) {
                                this.searchData = response.data.orderData;
                                $("#SearchModal").modal("show");
                            }
                            else if (!response.data.searchStatus) {
                                const returnObj = response.data.outModelreturnObj;

                                // 呼叫藍新金流 API
                                const form = document.createElement('form');
                                form.method = 'post';
                                // form.action = 'https://ccore.newebpay.com/API/QueryTradeInfo'; // 藍新金流單筆交易查詢驗證網址(測試環境)
                                form.action = 'https://core.newebpay.com/API/QueryTradeInfo'; // 藍新金流單筆交易查詢正式網址

                                for (const key in returnObj) {
                                    if (returnObj.hasOwnProperty(key)) {
                                        const hiddenField = document.createElement('input');
                                        hiddenField.type = 'hidden';
                                        hiddenField.name = key;
                                        hiddenField.value = returnObj[key];
                                        form.appendChild(hiddenField);
                                    }
                                }
                                document.body.appendChild(form);
                                form.submit();
                            }
                        }
                    }).catch(error => {
                            alert(error.response.status + " " + error.response.statusText + '\n' + error.response.data);
                        });
                },
                SendToNewebPayCancel: function (orderId) {
                     var self = this;

                    // 訂單Id
                    var postData = {};
                    postData['OrderId'] = orderId;

                    axios.post(`${this.baseAddress}/Companies/CompanyOrders/SendToNewebPayCancel`, postData, {
                        headers: {
                            'Content-Type': 'application/json'
                        },
                    }).then(response => {
                            const returnObj = response.data;

                            // 呼叫藍新金流 API
                            const form = document.createElement('form');
                            form.method = 'post';
                            // form.action = 'https://ccore.newebpay.com/API/CreditCard/Cancel'; // 藍新金流單筆交易取消授權驗證網址(測試環境)
                            form.action = 'https://core.newebpay.com/API/CreditCard/Cancel'; // 藍新金流單筆交易取消授權正式網址

                            for (const key in returnObj) {
                                if (returnObj.hasOwnProperty(key)) {
                                    const hiddenField = document.createElement('input');
                                    hiddenField.type = 'hidden';
                                    hiddenField.name = key;
                                    hiddenField.value = returnObj[key];
                                    form.appendChild(hiddenField);
                                }
                            }
                            document.body.appendChild(form);
                            form.submit();
                        })
                        .catch(error => {
                            alert(error.response.status + " " + error.response.statusText + '\n' + error.response.data);
                        });
                },
            },
            watch: {
                searchOrderInput: function () {
                    this.getCompanyOrders();
                },
            },
            mounted: function () {
                this.getCompanyOrders();
            },
        };
        let app = Vue.createApp(vueAppCompanyOrders).mount("#appCompanyOrders");
    </script>
}
