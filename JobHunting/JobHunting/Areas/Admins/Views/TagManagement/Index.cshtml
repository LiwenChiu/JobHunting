@model IEnumerable<JobHunting.Areas.Admins.ViewModels.TagsViewModel>

@{
    ViewData["Title"] = "標籤管理";
}

@section Styles
{
    <style>

    </style>
}

<div id="TagManagement" class="py-2 px-1" style="position: relative">
    @* 通知 *@
    <template v-if="alertStatus == '成功'">
        <div id="alert" class="alert alert-primary alert-dismissible fade show" role="alert" style="position: absolute">
            <strong>{{alertText}}</strong>
            <button type="button" class="btn-close" aria-label="Close" v-on:click="alertStatus=''"></button>
        </div>
    </template>
    <template v-else-if="alertStatus == '失敗'">
        <div id="alert" class="alert alert-danger alert-dismissible fade show" role="alert" style="position: absolute">
            <strong>{{alertText}}</strong>
            <button type="button" class="btn-close" aria-label="Close" v-on:click="alertStatus=''"></button>
        </div>
    </template>

    <div class="container text-center py-2 mb-2 border border-warning border-2" style="overflow-y:auto;height:77vh">
        <template v-for="item in TagClasses">
            <button class="astext overcard" type="button" data-bs-toggle="collapse" v-bind:data-bs-target="Returnhashtag(ReturnClassNameId(item))" aria-expanded="false" v-bind:aria-controls="ReturnClassNameId(item)">
                {{item.tagClassName}}
                    <span class="badge bg-warning" v-if="selectedFilterTagClass(item.tagClassId,TagChecked) > 0">{{selectedFilterTagClass(item.tagClassId,TagChecked)}}</span>
            </button>
            <div class="collapse" v-bind:id="ReturnClassNameId(item)">
                <div class="row">
                    <div class="col-2" v-for="Tag in filterTagClass(item.tagClassId)">
                        <input type="checkbox" v-bind:id="ReturnNameId(Tag)" v-bind:value="Tag.tagId" v-model="TagChecked" />
                        <label v-bind:for="ReturnNameId(Tag)">{{Tag.tagName}}</label>
                    </div>
                </div>
            </div>
            <hr />
        </template>
        <button class="astext overcard" type="button" data-bs-toggle="collapse" data-bs-target="#otherClass" aria-expanded="false" aria-controls="otherClass">
            其他
                <span class="badge bg-warning" v-if="selectedFilterTagClass(0,TagChecked) > 0">{{selectedFilterTagClass(0,TagChecked)}}</span>
        </button>
        <div class="collapse" id="otherClass">
            <div class="row">
                <div class="col-2" v-for="Tag in filterTagClass(0)">
                    <input type="checkbox" v-bind:id="ReturnNameId(Tag)" v-bind:value="Tag.tagId" v-model="TagChecked" />
                    <label v-bind:for="ReturnNameId(Tag)">{{Tag.tagName}}</label>
                </div>
            </div>
        </div>
        <hr />
    </div>
    @* <p>checked:{{TagChecked}}</p> *@
    <footer>
        <div class="container-fluid row" style="display:flex;align-items: center;justify-content: center;">
            <button type="button" class="btn btn-warning text-light col-md-2" v-on:click="TagChecked=[];">清空</button>
            <button type="button" class="btn btn-primary col-md-2" data-bs-toggle="modal" data-bs-target="#createTag">新增</button>
            <button type="button" class="btn btn-success col-md-2" data-bs-toggle="modal" data-bs-target="#editTags">修改</button>
            <button type="button" class="btn btn-danger col-md-2" data-bs-toggle="modal" data-bs-target="#deleteTags">刪除</button>
        </div>
        <div class="container-fluid row pt-2" style="display:flex;align-items: center;justify-content: center;">
            <button type="button" class="btn btn-warning col-md-2 text-light" data-bs-toggle="modal" data-bs-target="#moveTags">移動標籤</button>
            <button type="button" class="btn btn-primary col-md-2" data-bs-toggle="modal" data-bs-target="#createTagClass">新增類型</button>
            <button type="button" class="btn btn-success col-md-2" data-bs-toggle="modal" data-bs-target="#editTagClass">修改類型</button>
            <button type="button" class="btn btn-danger col-md-2" data-bs-toggle="modal" data-bs-target="#deleteTagClass">刪除類型</button>
        </div>
    </footer>

    @* 新增標籤 *@
    <div class="modal fade" id="createTag" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="createTagLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h3 class="modal-title text-light" id="createTagLabel">新增標籤</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="clearAllSelectedTag()"></button>
                </div>
                <div class="modal-body">
                    <div class="py-1">
                        <label class="h5">加入標籤類型:  </label>
                        <select class="form-select form-select-md" aria-label=".form-select-md" v-model="selectedTagClassId">
                            <option v-for="item in TagClasses" v-bind:value="item.tagClassId">{{item.tagClassName}}</option>
                            <option value="0">其他</option>
                        </select>
                    </div>
                    <div class="py-1">
                        <label class="h5">新增標籤名稱:  </label>
                        <input type="text" class="form-control" v-model.trim="tagName" />
                    </div>
                    @* 新增的Tag名稱:{{tagName}}
                    <br />
                    加入的TagClassId:{{selectedTagClassId}} *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" v-on:click="createTag(selectedTagClassId,tagName)">新增</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="clearAllSelectedTag()">取消</button>
                </div>
            </div>
        </div>
    </div>

    @* 新增標籤類型 *@
    <div class="modal fade" id="createTagClass" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="createTagClassLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h3 class="modal-title text-light" id="createTagClassLabel">新增標籤類型</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="clearAllSelectedTag()"></button>
                </div>
                <div class="modal-body">
                    <label class="h5">新增標籤類型名稱:  </label>
                    <input type="text" class="form-control" v-model.trim="tagClassName" />
                    @* 新增的TagClass名稱:{{tagClassName}} *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" v-on:click="createTagClass(tagClassName)">新增</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="clearAllSelectedTag()">取消</button>
                </div>
            </div>
        </div>
    </div>

    @* 移動標籤 *@
    <div class="modal fade" id="moveTags" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="moveTagsLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <h3 class="modal-title text-light" id="moveTagsLabel">移動標籤 - 請點選上方標籤</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="selectedTagClassId = null"></button>
                </div>
                <div class="modal-body">
                    <div class="py-1">
                        <label class="h5">移動至標籤類型:  </label>
                        <select class="form-select form-select-md" aria-label=".form-select-md" v-model="selectedTagClassId">
                            <option v-for="item in TagClasses" v-bind:value="item.tagClassId">{{item.tagClassName}}</option>
                            <option value="0">其他</option>
                        </select>
                    </div>
                    <h5>請問是否要移動標籤(已選{{TagChecked.length}}個標籤):</h5>
                    <div class="row">
                        <template v-for="id in TagChecked">
                            <button type="button" class="astext overcard col-sm-3" v-on:click="removeChooseTag(id)">{{tagIdToName(id)}}</button>
                        </template>
                    </div>
                    @* 要移動的標籤:{{TagChecked}} *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-warning text-light" data-bs-dismiss="modal" v-on:click="moveTags(selectedTagClassId,TagChecked)">移動</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="selectedTagClassId = null">取消</button>
                </div>
            </div>
        </div>
    </div>

    @* 修改標籤 *@
    <div class="modal fade" id="editTags" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="editTagsLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-success">
                    <h3 class="modal-title text-light" id="editTagsLabel">修改標籤</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="clearAllSelectedTag()"></button>
                </div>
                <div class="modal-body">
                    <div class="py-1">
                        <label class="h5">修改標籤類型:  </label>
                        <select class="form-select form-select-md" aria-label=".form-select-md" v-model="selectedTagClassId" v-on:change="selectedTagId = null">
                            <option v-for="item in TagClasses" v-bind:value="item.tagClassId">{{item.tagClassName}}</option>
                            <option value="0">其他</option>
                        </select>
                    </div>
                    <div class="py-1">
                        <label class="h5">欲修改標籤:  </label>
                        <template v-if="selectedTagClassId != null">
                            <select class="form-select form-select-md" aria-label=".form-select-sm" v-model="selectedTagId">
                                <option v-for="item in filterTagClass(selectedTagClassId)" v-bind:value="item.tagId">{{item.tagName}}</option>
                            </select>
                        </template>
                        <template v-else>
                            <select class="form-select form-select-md" aria-label=".form-select-sm" v-model="selectedTagId">
                                <option v-for="item in Tags" v-bind:value="item.tagId">{{item.tagName}}</option>
                            </select>
                        </template>
                    </div>
                    <div class="py-1">
                        <label class="h5">輸入修改名稱:</label>
                        <input type="text" class="form-control" v-model.trim="tagName" />
                    </div>
                    @* 屬於TagClassId:{{selectedTagClassId}}，修改的TagId:{{selectedTagId}}
                    <br />
                    修改名稱:{{tagName}} *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal" v-on:click="editTag(selectedTagClassId,selectedTagId,tagName)">修改</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="clearAllSelectedTag()">取消</button>
                </div>
            </div>
        </div>
    </div>

    @* 修改標籤類型 *@
    <div class="modal fade" id="editTagClass" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="editTagClassLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-success">
                    <h3 class="modal-title text-light" id="editTagClassLabel">修改標籤類型</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="clearAllSelectedTag()"></button>
                </div>
                <div class="modal-body">
                    <div class="py-1">
                        <label class="h5">修改標籤類型:  </label>
                        <select class="form-select form-select-md" aria-label=".form-select-md" v-model="selectedTagClassId">
                            <option v-for="item in TagClasses" v-bind:value="item.tagClassId">{{item.tagClassName}}</option>
                        </select>
                    </div>
                    <div class="py-1">
                        <label class="h5">修改標籤名稱:  </label>
                        <input type="text" class="form-control" v-model.trim="tagClassName" />
                    </div>
                    @* 修改TagClassId:{{selectedTagClassId}}，新增的TagClass名稱:{{tagClassName}} *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal" v-on:click="editTagClass(selectedTagClassId,tagClassName)">修改</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="clearAllSelectedTag()">取消</button>
                </div>
            </div>
        </div>
    </div>

    @* 刪除標籤 *@
    <div class="modal fade" id="deleteTags" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteTagsLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h3 class="modal-title text-light" id="deleteTagsLabel">刪除標籤 - 請點選上方標籤</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h5>請問是否要刪除標籤(已選{{TagChecked.length}}個標籤):</h5>
                    <div class="row">
                        <template v-for="id in TagChecked">
                            <button type="button" class="astext overcard col-sm-3" v-on:click="removeChooseTag(id)">{{tagIdToName(id)}}</button>
                        </template>
                    </div>
                    @* 要刪除的標籤:{{TagChecked}} *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" v-on:click="deleteTags(TagChecked)">刪除</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                </div>
            </div>
        </div>
    </div>

    @* 刪除標籤類型 *@
    <div class="modal fade" id="deleteTagClass" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteTagClassLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h3 class="modal-title text-light" id="deleteTagClassLabel">刪除標籤類型</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="selectedTagClassId = null"></button>
                </div>
                <div class="modal-body">
                    <h5>請問選擇欲刪除的標籤類型:</h5>
                    <select class="form-select form-select-md" aria-label=".form-select-md" v-model="selectedTagClassId">
                        <option v-for="item in TagClasses" v-bind:value="item.tagClassId">{{item.tagClassName}}</option>
                    </select>
                    @* 被選中的TagClassId是:{{selectedTagClassId}} *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" v-on:click="deleteTagClass(selectedTagClassId)">刪除</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="selectedTagClassId = null">取消</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let vueAppTagManagement = {
            data() {
                return {
                    baseAddress: "https://localhost:7169",
                    TagClasses: [],
                    Tags: [],
                    TagChecked: [],
                    selectedTagId: null,
                    selectedTagClassId: null,
                    tagName: "",
                    tagClassName: "",
                    alertText: "",
                    alertStatus: "",
                };
            },
            methods: {
                bootPage: function () {
                    axios.get(`${this.baseAddress}/Admins/TagManagement/IndexTagClasses`).then(
                        response => this.TagClasses = response.data
                    ).catch(
                        err => { alert(err) });

                    axios.get(`${this.baseAddress}/Admins/TagManagement/IndexTags`).then(
                        response => this.Tags = response.data
                    ).catch(
                        err => { alert(err) });
                },
                ReturnNameId: function (item) {
                    let NameId = `NameId${item.tagName}${item.tagId}`;
                    return NameId.replace(" ", "");
                },
                filterTagClass: function (ClassId) {
                    let _this = this;
                    return _this.Tags.filter(function (item) {
                        return item.tagClassId == ClassId;
                    });
                },
                selectedFilterTagClass: function (ClassId, TagChecked) {
                    let _this = this;
                    let counter = 0;
                    for(let i=0;i<TagChecked.length;i++){
                        if(this.filterTagClass(ClassId).filter(function(item){
                            return item.tagId == TagChecked[i];
                        }).length > 0){counter++;}
                    }
                    return counter;
                },
                ReturnClassNameId: function (item) {
                    let ClassNameId = `ClassNameId${item.tagClassName}${item.tagClassId}`;
                    return ClassNameId.replace(" ", "");
                },
                Returnhashtag: function (item) {
                    return `#${item}`;
                },
                clearAllSelectedTag: function () {
                    let _this = this;
                    _this.selectedTagId = null;
                    _this.selectedTagClassId = null;
                    _this.tagName = "";
                    _this.tagClassName = "";
                },
                createTag: function (TagClassId, tagName) {
                    let _this = this;
                    if (tagName == "") {
                        this.alertText = "請輸入欲新增標籤名稱";
                        this.alertStatus = "失敗";
                    }
                    else{
                        let request = {};
                        request.TagId = 0;
                        request.TagClassId = TagClassId;
                        request.tagName = tagName;
                        axios.post(`${this.baseAddress}/Admins/TagManagement/CreateTag`, request, {
                            headers: { 'Content-Type': 'application/json' }
                        })
                            .then(response => {
                                this.alertText = response.data[0];
                                this.alertStatus = response.data[1];
                                this.bootPage();
                            }).catch(err => { alert(err) });
                    }
                    this.alertOut();
                    _this.selectedTagClassId = null;
                    _this.tagName = "";
                },
                createTagClass: function (tagClassName) {
                    let _this = this;
                    if (tagClassName == "") {
                        this.alertText = "請輸入欲新增標籤類型名稱";
                        this.alertStatus = "失敗";
                    }
                    else {
                        let request = {};
                        request.tagClassName = tagClassName;
                        axios.post(`${this.baseAddress}/Admins/TagManagement/CreateTagClass`, request, {
                            headers: { 'Content-Type': 'application/json' }
                        }).then(response => {
                            this.alertText = response.data[0];
                            this.alertStatus = response.data[1];
                            this.bootPage();
                        }).catch(err => { alert(err) });
                    }
                    this.alertOut();
                    _this.tagClassName = "";
                },
                moveTags:function(selectedTagClassId,TagChecked){
                    let _this = this;
                    if (TagChecked.length == 0) {
                        this.alertText = "請選擇欲移動標籤";
                        this.alertStatus = "失敗";
                    }
                    else {
                        let request = {};
                        request.TagClassId = (selectedTagClassId == null ? 0 : selectedTagClassId);
                        request.TagChecked = TagChecked;
                        axios.post(`${this.baseAddress}/Admins/TagManagement/MoveTags`, request, {
                            headers: { 'Content-Type': 'application/json' }
                        }).then(response => {
                            this.alertText = response.data[0];
                            this.alertStatus = response.data[1];
                            this.bootPage();
                        }).catch(err => { alert(err) });
                    }
                    this.alertOut();
                    _this.selectedTagClassId = null;
                    _this.TagChecked = [];
                },
                editTag: function (selectedTagClassId, selectedTagId, tagName) {
                    let _this = this;
                    if (selectedTagId == null) {
                        this.alertText = "請選擇欲修改標籤";
                        this.alertStatus = "失敗";
                    }
                    else if (tagName == "") {
                        this.alertText = "請輸入欲修改標籤名稱";
                        this.alertStatus = "失敗";
                    }
                    else{
                        let request = {};
                        request.TagId = selectedTagId;
                        request.TagClassId = (selectedTagClassId == null ? 0 : selectedTagClassId);
                        request.tagName = tagName;
                        axios.post(`${this.baseAddress}/Admins/TagManagement/EditTag`, request, {
                            headers: { 'Content-Type': 'application/json' }
                        }).then(response => {
                            this.alertText = response.data[0];
                            this.alertStatus = response.data[1];
                            this.bootPage();
                        }).catch(err => { alert(err) });
                    }
                    this.alertOut();
                    _this.selectedTagClassId = null;
                    _this.selectedTagId = null;
                    _this.tagName = "";
                },
                editTagClass: function (selectedTagClassId, tagClassName) {
                    let _this = this;
                    if (selectedTagClassId == null){
                        this.alertText = "請選擇欲修改標籤類型";
                        this.alertStatus = "失敗";
                    }
                    else if (tagClassName == "") {
                        this.alertText = "請輸入欲修改標籤類型名稱";
                        this.alertStatus = "失敗";
                    }
                    else{
                        let request = {};
                        request.TagClassId = selectedTagClassId;
                        request.tagClassName = tagClassName;
                        axios.post(`${this.baseAddress}/Admins/TagManagement/EditTagClass`, request, {
                            headers: { 'Content-Type': 'application/json' }
                        }).then(response => {
                            this.alertText = response.data[0];
                            this.alertStatus = response.data[1];
                            this.bootPage();
                        }).catch(err => { alert(err) });
                    }
                    this.alertOut();
                    _this.selectedTagClassId = null;
                    _this.tagClassName = null;
                },
                removeChooseTag: function (id) {
                    let _this = this;
                    _this.TagChecked.splice(jQuery.inArray(id, _this.TagChecked), 1);
                },
                tagIdToName: function (id) {
                    let _this = this;
                    return _this.Tags.filter(function (item) {
                        return item.tagId == id;
                    })[0].tagName;
                },
                deleteTags: function (delArray) {
                    let _this = this;
                    if (delArray.length == 0){
                        this.alertText = "請選擇欲刪除標籤";
                        this.alertStatus = "失敗";
                    }
                    else{
                        axios.post(`${this.baseAddress}/Admins/TagManagement/DeleteTags`, delArray, {
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                            .then(response => {
                                this.alertText = response.data[0];
                                this.alertStatus = response.data[1];
                                this.bootPage();
                            }).catch(err => { alert(err) });
                    }
                    this.alertOut();
                    _this.TagChecked = [];
                },
                deleteTagClass: function (selectedTagClassId) {
                    let _this = this;
                    if (selectedTagClassId == null) {
                        this.alertText = "請選擇欲刪除標籤類型";
                        this.alertStatus = "失敗";
                    }
                    else{
                        axios.post(`${this.baseAddress}/Admins/TagManagement/DeleteTagClass`, selectedTagClassId, {
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        }).then(response => {
                            this.alertText = response.data[0];
                            this.alertStatus = response.data[1];
                            this.bootPage();
                        }).catch(err => { alert(err) });
                    }
                    this.alertOut();
                    _this.selectedTagClassId = null;
                },
                alertOut:function(){
                    let time = window.setTimeout(( () => this.alertStatus = ""),5000);
                },
            },
            watch:{

            },
            mounted: function () {
                // let _this = this;
                // alert("mounted");
                this.bootPage();
            },
        };
        let app = Vue.createApp(vueAppTagManagement).mount("#TagManagement");
    </script>
}