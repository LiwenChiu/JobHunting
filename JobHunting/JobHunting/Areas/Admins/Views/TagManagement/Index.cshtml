@model IEnumerable<JobHunting.Areas.Admins.ViewModels.TagsViewModel>

@{
    ViewData["Title"] = "標籤管理";
}

@section Styles
{
    <style>

    </style>
}

<div id="TagManagement" class="py-2 px-1" asp-area="Admins" asp-controller="Home" asp-action="TagManagement">
    <div class="container text-center pt-2 py-2 mb-2 border border-warning border-2" style="overflow-y:auto;height:65vh">
        <template v-for="item in TagClasses">
            <button class="astext overcard" type="button" data-bs-toggle="collapse" v-bind:data-bs-target="Returnhashtag(ReturnClassNameID(item))" aria-expanded="false" v-bind:aria-controls="ReturnClassNameID(item)">
                {{item.tagClassName}}
                @* <span class="badge bg-danger">{{selectedFilterTagClass(item.TagClassID,TagCheckedResume).length}}</span> *@
            </button>
            <div class="collapse" v-bind:id="ReturnClassNameID(item)">
                <div class="row">
                    <div class="col-2" v-for="Tag in filterTagClass(item.tagClassID)">
                        <input type="checkbox" v-bind:id="ReturnNameID(Tag)" v-bind:value="Tag.tagID" v-model="TagCheckedResume" />
                        <label v-bind:for="ReturnNameID(Tag)">{{Tag.tagName}}</label>
                    </div>
                </div>
            </div>
            <hr />
        </template>
        <button class="astext overcard" type="button" data-bs-toggle="collapse" data-bs-target="#otherClass" aria-expanded="false" aria-controls="otherClass">
            其他
            @* <span class="badge bg-danger">{{selectedFilterTagClass(item.TagClassID,TagCheckedResume).length}}</span> *@
        </button>
        <div class="collapse" id="otherClass">
            <div class="row">
                <div class="col-2" v-for="Tag in filterTagClass(0)">
                    <input type="checkbox" v-bind:id="ReturnNameID(Tag)" v-bind:value="Tag.tagID" v-model="TagCheckedResume" />
                    <label v-bind:for="ReturnNameID(Tag)">{{Tag.tagName}}</label>
                </div>
            </div>
        </div>
        <hr />
    </div>
    @* <p>checked:{{TagCheckedResume}}</p> *@
    <footer>
        <div class="d-grid pb-2">
            <button type="button" class="btn btn-warning text-light" v-on:click="TagCheckedResume=[];">清除</button>
        </div>
        <div class="container-fluid row" style="display:flex;align-items: center;justify-content: center;">
            <button type="button" class="btn btn-primary col-md-2" data-bs-toggle="modal" data-bs-target="#addTags">新增</button>
            <button type="button" class="btn btn-success col-md-2" data-bs-toggle="modal" data-bs-target="#editTags">修改</button>
            <button type="button" class="btn btn-danger col-md-2" data-bs-toggle="modal" data-bs-target="#deleteTags">刪除</button>
        </div>
        <div class="container-fluid row pt-2" style="display:flex;align-items: center;justify-content: center;">
            <button type="button" class="btn btn-primary col-md-2" data-bs-toggle="modal" data-bs-target="#addTagClass">新增類型</button>
            <button type="button" class="btn btn-success col-md-2" data-bs-toggle="modal" data-bs-target="#editTagClass">修改類型</button>
            <button type="button" class="btn btn-danger col-md-2" data-bs-toggle="modal" data-bs-target="#deleteTagClass">刪除類型</button>
        </div>
    </footer>

    @* 新增標籤 *@
    <div class="modal fade" id="addTags" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="addTagsLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h3 class="modal-title text-light" id="addTagsLabel">新增標籤</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="clearAllSelectedTag()"></button>
                </div>
                <div class="modal-body">
                    <div class="py-1">
                        <label class="h5">加入標籤類型:  </label>
                        <select class="form-select form-select-md" aria-label=".form-select-md" v-model="selectedTagClassID">
                            <option v-for="item in TagClasses" v-bind:value="item.tagClassID">{{item.tagClassName}}</option>
                            <option value="0">其他</option>
                        </select>
                    </div>
                    <div class="py-1">
                        <label class="h5" >新增標籤名稱:  </label>
                        <input type="text"  class="form-control" v-model.trim="TagName" />
                    </div>
                    @* 新增的Tag名稱:{{TagName}}
                    <br />
                    加入的TagClassID:{{selectedTagClassID}} *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" v-on:click="addTag(selectedTagClassID,TagName)">新增</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="clearAllSelectedTag()">取消</button>
                </div>
            </div>
        </div>
    </div>

    @* 新增標籤類型 *@
    <div class="modal fade" id="addTagClass" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="addTagClassLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h3 class="modal-title text-light" id="addTagClassLabel">新增標籤類型</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="clearAllSelectedTag()"></button>
                </div>
                <div class="modal-body">
                    <label class="h5" >新增標籤類型名稱:  </label>
                    <input type="text"  class="form-control" v-model.trim="TagClassName" />
                    @* 新增的TagClass名稱:{{TagClassName}} *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" v-on:click="addTagClass(TagClassName)">新增</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="clearAllSelectedTag()">取消</button>
                </div>
            </div>
        </div>
    </div>

    @* 修改標籤 *@
    <div class="modal fade" id="editTags" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="editTagsLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-success">
                    <h3 class="modal-title text-light" id="editTagsLabel">修改標籤</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="clearAllSelectedTag()"></button>
                </div>
                <div class="modal-body">
                    <div class="py-1">
                        <label class="h5">修改標籤類型:  </label>
                        <select class="form-select form-select-md" aria-label=".form-select-md" v-model="selectedTagClassID" v-on:change="selectedTagID = null">
                            <option v-for="item in TagClasses" v-bind:value="item.tagClassID">{{item.tagClassName}}</option>
                            <option value="0">其他</option>
                            
                        </select>
                    </div>
                    <div class="py-1">
                        <label class="h5">欲修改標籤:  </label>
                        <template v-if="selectedTagClassID != null">
                            <select class="form-select form-select-md" aria-label=".form-select-sm" v-model="selectedTagID">
                                <option v-for="item in filterTagClass(selectedTagClassID)" v-bind:value="item.tagID">{{item.tagName}}</option>
                            </select>
                        </template>
                        <template v-else>
                            <select class="form-select form-select-md" aria-label=".form-select-sm" v-model="selectedTagID">
                                <option v-for="item in Tags" v-bind:value="item.tagID">{{item.tagName}}</option>
                            </select>
                        </template>
                    </div>
                    <div class="py-1">
                        <label class="h5" >輸入修改名稱:</label>
                        <input type="text"  class="form-control" v-model.trim="TagName" />
                    </div>
                    @* 屬於TagClassID:{{selectedTagClassID}}，修改的TagID:{{selectedTagID}}
                    <br />
                    修改名稱:{{TagName}} *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal" v-on:click="editTag(selectedTagClassID,selectedTagID,TagName)">修改</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="clearAllSelectedTag()">取消</button>
                </div>
            </div>
        </div>
    </div>

    @* 修改標籤類型 *@
    <div class="modal fade" id="editTagClass" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="editTagClassLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-success">
                    <h3 class="modal-title text-light" id="editTagClassLabel">修改標籤類型</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="clearAllSelectedTag()"></button>
                </div>
                <div class="modal-body">
                    <div class="py-1">
                        <label class="h5">修改標籤類型:  </label>
                        <select class="form-select form-select-md" aria-label=".form-select-md" v-model="selectedTagClassID">
                            <option v-for="item in TagClasses" v-bind:value="item.tagClassID">{{item.tagClassName}}</option>
                        </select>
                    </div>
                    <div class="py-1">
                        <label class="h5" >修改標籤名稱:  </label>
                        <input type="text"  class="form-control" v-model.trim="TagClassName" />
                    </div>
                    @* 修改TagClassID:{{selectedTagClassID}}，新增的TagClass名稱:{{TagClassName}} *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-bs-dismiss="modal" v-on:click="editTagClass(selectedTagClassID,TagClassName)">修改</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="clearAllSelectedTag()">取消</button>
                </div>
            </div>
        </div>
    </div>

    @* 刪除標籤 *@
    <div class="modal fade" id="deleteTags" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteTagsLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h3 class="modal-title text-light" id="deleteTagsLabel">刪除標籤 - 請點選上方標籤</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <h5>請問是否要刪除標籤(已選{{TagCheckedResume.length}}個標籤):</h5>
                    <div class="row">
                        <template v-for="id in TagCheckedResume">
                            <button type="button" class="astext overcard col-sm-3" v-on:click="removeChooseTag(id)">{{tagIDToName(id)}}</button>
                        </template>
                    </div>
                    @* 要刪除的標籤:{{TagCheckedResume}} *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" v-on:click="deleteTags(TagCheckedResume)">刪除</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                </div>
            </div>
        </div>
    </div>

    @* 刪除標籤類型 *@
    <div class="modal fade" id="deleteTagClass" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deleteTagClassLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h3 class="modal-title text-light" id="deleteTagClassLabel">刪除標籤類型</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="selectedTagClassID = null"></button>
                </div>
                <div class="modal-body">
                    <h5>請問選擇欲刪除的標籤類型:</h5>
                    <select class="form-select form-select-md" aria-label=".form-select-md" v-model="selectedTagClassID">
                        <option v-for="item in TagClasses" v-bind:value="item.tagClassID">{{item.tagClassName}}</option>
                    </select>
                    @* 被選中的TagClassID是:{{selectedTagClassID}} *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" v-on:click="deleteTagClass(selectedTagClassID)">刪除</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="selectedTagClassID = null">取消</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let VueAppTagManagement = {
            data() {
                return {
                    baseAddress: "https://localhost:7169",
                    TagClasses: [],
                    Tags: [],
                    TagCheckedResume: [],
                    selectedTagID: null,
                    selectedTagClassID: null,
                    TagName: "",
                    TagClassName: "",
                    test:[4]
                };
            },
            methods: {
                bootPage: function () {
                    // let _this = this;

                    // axios.get(`${_this.baseAddress}/Admins/TagManagement/IndexTagManagement`)
                    // .then(response => {
                    //     for(let i=0;i<response.data.length;i++){
                    //         let tagdata = {};
                    //         let tagjson = [];
                    //         let tagclassid = [];
                    //         let tagclassdata = {};
                    //         let tagclassjson = [];
                            
                    //         tagdata.tagID = response.data[i].tagID;
                    //         tagdata.tagClassID = response.data[i].tagClassID;
                    //         tagdata.tagName = response.data[i].tagName;
                    //         tagjson.push(tagdata);
                    //         tagclassid.push(response.data[i].tagClassID);
                    //         if(!tagclassid.includes(response.data[i].tagClassID)){
                    //             tagclassdata.tagClassID = response.data[i].tagClassID;
                    //             tagclassdata.tagClassName = response.data[i].tagClassName;
                    //             tagclassjson.push(tagclassdata);
                    //         }

                    //         _this.Tags = tagjson;
                    //         _this.TagClasses = tagclassjson;
                    //     }
                    // }).catch(err => { alert(err) });

                    axios.get(`${this.baseAddress}/Admins/TagManagement/IndexTagClasses`).then(
                        response => this.TagClasses = response.data
                    ).catch(
                        err => { alert(err) });

                    axios.get(`${this.baseAddress}/Admins/TagManagement/IndexTags`).then(
                        response => this.Tags = response.data
                    ).catch(
                        err => { alert(err) });
                },
                ReturnNameID: function (item) {
                    let NameID = `${item.tagName}${item.tagID}`;
                    return NameID.replace(" ", "");
                },
                filterTagClass: function (ClassID) {
                    let _this = this;
                    return _this.Tags.filter(function (item) {
                        return item.tagClassID == ClassID;
                    });
                },
                // selectedFilterTagClass: function (ClassID, TagCheckedResume) {
                //     let _this = this;
                //     return this.Tags.filter(function (item) {
                //         return item.TagClassID == ClassID;
                //     }).filter(function (item) {
                //         return TagCheckedResume.indexof(item.TagID) > -1;
                //     });
                // },
                ReturnClassNameID: function (item) {
                    let ClassNameID = `${item.tagClassName}${item.tagClassID}`;
                    return ClassNameID.replace(" ", "");
                },
                Returnhashtag: function (item) {
                    return `#${item}`;
                },
                clearAllSelectedTag: function () {
                    let _this = this;
                    _this.selectedTagID = null;
                    _this.selectedTagClassID = null;
                    _this.TagName = "";
                    _this.TagClassName = "";
                },
                addTag: function (TagClassID, TagName) {
                    let _this = this;
                    let request = {};
                    request.TagID = 0;
                    request.TagClassID = TagClassID;
                    request.TagName = TagName;
                    axios.post(`${this.baseAddress}/Admins/TagManagement/CreateTag`, request, {
                        headers: {'Content-Type':'application/json'}
                    })
                        .then(response => {
                            // alert(response.data);
                            this.bootPage();
                        }).catch(err => { alert(err) });
                    _this.selectedTagClassID = null;
                    _this.TagName = "";
                },
                addTagClass: function (TagClassName) {
                    let _this = this;

                    _this.TagClassName = "";
                },
                editTag: function (selectedTagClassID, selectedTagID, TagName) {
                    let _this = this;

                    _this.selectedTagClassID = null;
                    _this.selectedTagID = null;
                    _this.TagName = "";
                },
                editTagClass: function (selectedTagClassID, TagClassName) {
                    let _this = this;

                    _this.selectedTagClassID = null;
                    _this.TagClassName = null;
                },
                // changeItem:function(event){
                //     let _this = this;
                //     _this.selectedTagID = event.target.value;
                // },
                removeChooseTag: function (id) {
                    let _this = this;
                    _this.TagCheckedResume.splice(jQuery.inArray(id, _this.TagCheckedResume), 1);
                },
                tagIDToName: function (id) {
                    let _this = this;
                    return _this.Tags.filter(function (item) {
                        return item.tagID == id;
                    })[0].tagName;
                },
                deleteTags: function (delArray) {
                    let _this = this;
                    
                    axios.post(`${this.baseAddress}/Admins/TagManagement/DeleteTags`,delArray,{
                        headers:{
                            'Content-Type':'application/json'
                        }})
                        .then(response => {
                            // alert(response.data);
                            this.bootPage();
                        }).catch(err => {alert(err)});
                    _this.TagCheckedResume = [];
                },
                deleteTagClass: function (selectedTagClassID) {
                    let _this = this;

                    _this.selectedTagClassID = null;
                },
            },
            mounted: function () {
                let _this = this;
                // alert("mounted");
                this.bootPage();
            },
        };
        let app = Vue.createApp(VueAppTagManagement).mount("#TagManagement");
    </script>
}