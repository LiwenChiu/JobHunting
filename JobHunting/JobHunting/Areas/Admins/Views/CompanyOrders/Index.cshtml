@model IEnumerable<JobHunting.Areas.Admins.ViewModels.CompanyOrdersViewModel>

@{
    ViewData["Title"] = "訂單紀錄";
}

@section Styles
{
    <style>

    </style>
}

<div id="CompanyOrdersVue">
    @*<h3 class="text-center pt-2">訂單紀錄</h3> *@

    <div class="py-2 px-1">
       @*  <div class="col-md-10">
            <select class="" style="width:17%" id="OrderOpTitle2" v-model="orderSelA">
                <option :value="idx" v-for="items,idx in OrderDetail">{{items.Detail}}</option>
            </select>
            <select class="" style=" width:20%" v-model="orderSelB">
                <option value=0 v-if="orderSelA==0" v-for="item in CompanyOrders">{{item.companyName}}</option>
                <option value=1 v-else-if="orderSelA==1" v-for="item in CompanyOrders">{{item.title}}</option>
                <option value=2 v-else-if="orderSelA==2" v-for="item in CompanyOrders">{{item.payDate}}</option>
                <option value=3 v-else-if="orderSelA==3" v-for="item in CompanyOrders">{{item.duration}}</option>
                <option value=4 v-else v-for="item in CompanyOrders">{{item.status}}</option>
            </select>
        </div> *@
        <div class="container-fluid">
            <div class="row">
                <label for="filterCompanyOrders" class="col-md-2 text-end">關鍵字搜尋:</label>
                <input type="text" id="filterCompanyOrders" name="filterCompanyOrders" class="col-md-8" placeholder="請輸入關鍵字" v-model.trim="filterInput" />
            </div>
            <div class="row">
                <label for="pageNumber" class="col-md-2 text-end">每頁筆數: </label>
                <input type="text" id="pageNumber" name="pageNumber" class="col-md-8" placeholder="請輸入每頁筆數" v-model.trim.number="pageLength" />
                <div class="col-md-2">
                    <label for="inputPaging">第</label>
                    <input type="text" id="inputPaging" style="width: 3vh" v-model.trim.number="pageStart" />
                    <label for="inputPaging">頁</label>
                </div>
            </div>
        </div>
    </div>
    
    <div class="container tableOutside" style="overflow-y:auto;height:73vh">
        <table class="table table-striped text-center mt-1" id="ChangePage">
            <thead class="table-warning">
                <tr>
                    @* <th scope="col">訂單ID</th> *@
                    <th scope="col">公司名稱</th>
                    <th scope="col">統一編號</th>
                    <th scope="col">方案名稱</th>
                    <th scope="col">金額</th>
                    <th scope="col">付款時間</th>
                    <th scope="col">方案天數</th>
                    <th scope="col">付款狀態</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="order in companyOrders">
                    @* <td><small>{{order.orderId}}</small></td> *@
                    <td>{{order.companyName}}</td>
                    <td>{{order.guiNumber}}</td>
                    <td>{{order.title}}</td>
                    <td>{{order.price}}</td>
                    <td>{{order.payDate}}</td>
                    <td>{{order.duration}}</td>
                    <td><button class="btn btn-light btn-sm">{{order.statusType}}</button></td>
                </tr>
            </tbody>
        </table>
    </div>
    <nav aria-label="Page navigation" class="justify-content-center" style="display: flex;">
            <ul class="pagination" style="margin: 0;">
                <li class="page-item">
                <button type="button" class="page-link" aria-label="Previous" v-on:click="turnPagePrevious()" v-bind:disabled="turnPagePreviousisdisabled">
                        <span aria-hidden="true">&laquo;</span>
                    </button>
                </li>
                <template v-for="page in totalPage">
                    <li class="page-item"><button class="page-link" v-on:click="turnPage(page)">{{page}}</button></li>
                </template>
                <li class="page-item">
                <button type="button" class="page-link" aria-label="Next" v-on:click="turnPageNext()" v-bind:disabled="turnPageNextisdisabled">
                        <span aria-hidden="true">&raquo;</span>
                    </button>
                </li>
            </ul>
        </nav>
</div>

@section Scripts
{
    <script>
            let VueAppCompanyOrders = {
            data(){
                return {
                    //baseAddress: "https://duckjobhunting.azurewebsites.net",
                    baseAddress: "https://localhost:7169",
                    filterInput: "",
                    companyOrders: [],
                    pageDraw: null,
                    pageLength: 8,  //一頁幾筆
                    pageLengthSafe: null,
                    pageStart: 1,   //第幾頁
                    pageStartSafe: null,
                    totalDataCount: null,   //總共幾筆資料
                    totalPage: null,    //總共幾頁
                    turnPagePreviousisdisabled: false,
                    turnPageNextisdisabled: false,
                };
            },
            methods:{
                bootFilterPaging: function () {
                    this.pageLengthSafe = this.pageLength == null || Number.isNaN(Number(this.pageLength)) || this.pageLength <= 0 ? 8 : this.pageLength;
                    this.pageStartSafe = this.pageStart == null || Number.isNaN(Number(this.pageStart)) || this.pageStart <= 0 ? 1 : this.pageStart;
                    let request = {};
                    request.CompanyId = request.PlanId = request.Price = request.Duration = (Number.isNaN(Number(this.filterInput)) ? -1 : Number(this.filterInput));
                    request.OrderId = request.CompanyName = request.GUINumber = request.Title = request.Intro = request.PayDate = request.Expiration = request.StatusType = this.filterInput;
                    request.PageDraw = this.pageDraw;
                    request.PageLength = this.pageLengthSafe,
                    request.PageStart = this.pageStartSafe;
                    axios.post(`${this.baseAddress}/Admins/CompanyOrders/BootFilterPaging`, request, {
                        headers: {
                            'Content-Type': 'application/json'
                        },
                    }).then(response => {
                        this.companyOrders = response.data.companyOrdersFilter;
                        this.totalDataCount = response.data.totalDataCount;
                        this.totalPage = Number.isInteger((response.data.totalDataCount) / (this.pageLengthSafe)) ? parseInt((response.data.totalDataCount) / (this.pageLengthSafe)) : parseInt((response.data.totalDataCount) / (this.pageLengthSafe)) + 1;
                    })
                    .catch(err => { alert(err) })
                    .finally(() => {
                        if (this.pageStart === 1) {
                            this.turnPagePreviousisdisabled = true;
                        }
                        else {
                            this.turnPagePreviousisdisabled = false;
                        }
                        if (this.pageStart == this.totalPage) {
                            this.turnPageNextisdisabled = true;
                        }
                        else{
                            this.turnPageNextisdisabled = false;
                        }
                    });
                },
                turnPage: function (page) {
                    this.pageStart = page;
                },
                turnPagePrevious: function () {
                    if (this.pageStart != 1) {
                        this.pageStart--;
                    }
                },
                turnPageNext: function () {
                    if (this.pageStart != this.totalPage) {
                        this.pageStart++;
                    }
                },
            },
            watch:{
                filterInput:function(){
                    this.bootFilterPaging();
                },
                pageLength:function(){
                    this.bootFilterPaging();
                    if(this.pageStart > this.totalPage){
                        this.pageStart = this.totalPage;
                    }
                },
                pageStart:function(){
                    this.bootFilterPaging();
                },
            },
            mounted: function(){
                this.bootFilterPaging();
            },
        };
        let app = Vue.createApp(VueAppCompanyOrders).mount("#CompanyOrdersVue");
    </script>
}
