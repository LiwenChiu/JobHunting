@section Styles
{

}


<div class="container py-2" id="app">
    <div class="row" style="width:30%; margin-left:10px; margin-right:auto">
            <label class="form-label">關鍵字搜尋：</label>
            <input type="text" class="form-control" v-model="filter" placeholder="請輸入關鍵字" v-on:keyup="filterCandidateList" />
        </div>
    <table class="table text-center table-striped table-hover">
        <thead>
            <tr>
                <td>求職者ID</td>
                <td>姓名</td>
                <td class="col">信箱</td>
                <td>性別</td>
                <td>學歷</td>
                <td>地區</td>
                <td>註冊時間</td>
                <td>驗證狀態</td>
            </tr>
        </thead>
        <tbody id="CandidateList">
            <tr v-for="item in candidatelist.slice(pageStart,pageEnd)" class="overcard">
                <td>{{item.candidateId}}</td>
                <td>{{item.name}}</td>
                <td class="col">{{item.email}}</td>
                <td>{{gender(item.sex)}}</td>
                <td>{{item.degree}}</td>
                <td>{{item.address}}</td>
                <td>{{item.registerTime}}</td>
                <template v-if="item.verifyEmailYN == false"><td class="col-1"><button class="btn btn-danger disabled">待審核</button></td></template>
                <template v-else=""><td class="col-2"><button class="btn btn-secondary" disabled>已審核</button></td></template>
            </tr>
        </tbody>
    </table>
    <div>
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                <li class="page-item" v-on:click="setPage(currentPage-1)">
                    <a class="page-link" href="#" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                <li v-for="item in totalPage" class="page-item" v-on:click="setPage(item)">
                    <a class="page-link" href="#">{{item}}</a>
                </li>
                
                <li class="page-item" v-on:click="setPage(currentPage+1)">
                    <a class="page-link" href="#" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@section Scripts
{
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.7.4/axios.min.js" integrity="sha512-6VJrgykcg/InSIutW2biLwA1Wyq+7bZmMivHw19fI+ycW0jIjsadm8wKQQLlfv3YUS4owfMDlZU38NtaAK6fSg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <script>
        Vue.createApp({
            data() {
                return {
                    pageStatus: 0,
                    perpage: 8, //一頁的資料數
                    currentPage: 1,
                    MessageStatus: 1,

                    candidatelist: [], //後端撈的資料陣列
                    filter: "",

                    baseAddress: "https://localhost:7169",
                                                    
                }
            }, 
            computed: {
                totalPage() {
                    return Math.ceil(this.candidatelist.length / this.perpage)
                    //回傳大於等於的最小整數
                },
                pageStart() {
                    return (this.currentPage - 1) * this.perpage                
                },
                pageEnd() {
                    return this.currentPage * this.perpage                    
                }
            }, 
            methods: {
                setPage(page) {
                    if (page <= 0 || page > this.totalPage) {
                        return
                    }
                    this.currentPage = page
                },
                CandidateListData: function () {
                    // alert("AAA");
                    fetch("/Admins/CandidateList/IndexJson_candidate", {
                        method: "GET"
                    }).then(response => {
                        return response.json();
                    }).then(data => {
                        return this.candidatelist = data
                    }).catch(err => {
                        alert(JSON.stringify(err))
                    })
                },
                gender: function (isMale) {   
                    return isMale ? '男' : '女';
                },

                filterCandidateList: function() {
                    // alert(`filter:${_this.filter}`);
                    let _this = this;
                    let request = {};
                    if (_this.filter == "男")
                        request.sex = true;
                    else if (_this.filter == "女")
                        request.sex = false;

                    request.CandidateId = isNaN(Number(_this.filter)) ? -1 : Number(_this.filter);
                    request.Name = request.Degree = request.Address = _this.filter;
                    axios.post(`${_this.baseAddress}/Admins/CandidateList/Filter`, request).then(response => {
                        // alert(JSON.stringify(response.data));
                        _this.candidatelist = response.data;

                    }).catch(err => {
                        alert(JSON.stringify(err));
                    });
                },
            }, 
            mounted: function () {
                let _this = this;
                _this.CandidateListData();
                _this.filterCandidateList();
                _this.gender();
                // _this.setPage();
            },
        }).mount("#app");
    </script>
}