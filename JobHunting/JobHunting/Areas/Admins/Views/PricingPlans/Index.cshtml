@model IEnumerable<JobHunting.Areas.Admins.Models.PricingPlan>

@{
    ViewData["Title"] = "方案管理";
}

@section Styles
{
    <style>

    </style>
}

<div id="PricingPlans">
    <div class="pt-2 px-1 bg-blanchedalmond">
        @* 通知 *@
        <template v-if="alertStatus == '成功'">
            <div id="alert" class="alert alert-primary alert-dismissible fade show" role="alert" style="position: absolute">
                <strong>{{alertText}}</strong>
                <button type="button" class="btn-close" aria-label="Close" v-on:click="alertStatus=''"></button>
            </div>
        </template>
        <template v-else-if="alertStatus == '失敗'">
            <div id="alert" class="alert alert-danger alert-dismissible fade show" role="alert" style="position: absolute">
                <strong>{{alertText}}</strong>
                <button type="button" class="btn-close" aria-label="Close" v-on:click="alertStatus=''"></button>
            </div>
        </template>

        <h3 align="center">方案管理</h3>
        <div class="border border-3 container" style="overflow-y:auto;height:75vh">
            <div class="row">
                <div class="col-11">
                    <div class="row" style="display:flex;align-items: center;justify-content: center;">
                        <p class="col-sm-2 h4">方案</p>
                        <p class="col-sm-2 h4">天數</p>
                        <p class="col-sm-2 h4">售價</p>
                        <p class="col-sm-2 h4">折扣</p>
                    </div>
                </div>
            </div>
            <div class="container-fluid row" style="display:flex;align-items: center;justify-content: center;" v-for="plan in pricingPlans">
                <div class="col-11 pt-sm-1" role="button" v-on:click="clickedID = plan.planID">
                    <div class="card overcard">
                        <div class="card-body">
                            <div class="row row-cols-2 align-items-center">
                                <template v-if="plan.status == true">
                                    <template v-if="plan.edit == false">
                                        <p class="col-sm-2">方案: {{plan.title}}</p>
                                        <button type="button" class="col-1 btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#editIntro" v-on:click="clickedPlanIntro = clickedPlanIntroOld = plan.intro;clickedPlanIntroID = plan.planID;">簡介</button>
                                        <p class="col-sm-2">天數: {{plan.duration}}</p>
                                        <p class="col-sm-2">售價: ${{plan.price}}</p>
                                        <p class="col-sm-2">折扣: {{plan.discount*100}}%</p>
                                    </template>
                                    <template v-else>
                                        <label class="col-sm-2">方案:<input type="text" class="col-sm-2" name="title" style="width:50%" v-model.trim="plan.title" /></label>
                                        <button type="button" class="col-1 btn btn-outline-secondary" data-bs-toggle="modal" data-bs-target="#editIntro" v-on:click="clickedPlanIntro = clickedPlanIntroOld = plan.intro;clickedPlanIntroID = plan.planID;">簡介</button>
                                        <label class="col-sm-2">天數:<input type="text" name="duration" v-model.trim="plan.duration" /></label>
                                        <label class="col-sm-2">售價:<input type="text" name="price" v-model.trim="plan.price" /></label>
                                        <label class="col-sm-2">折扣:<input type="text" name="discount" v-model.trim="plan.discount" /></label>
                                    </template>
                                    <template v-if="plan.edit == false">
                                        <button type="button" class="col-sm-2 btn btn-warning" v-on:click="plan.edit = true;">編輯</button>
                                    </template>
                                    <template v-else>
                                        <button type="button" class="col-sm-2 btn btn-primary" v-on:click="editPricingPlans(plan);">儲存</button>
                                    </template>
                                </template>
                                <template v-else>
                                    <p class="col-sm-2">方案: {{plan.title}}</p>
                                    <p class="col-sm-2">天數: {{plan.duration}}</p>
                                    <p class="col-sm-2">售價: ${{plan.price}}</p>
                                    <p class="col-sm-2">折扣: {{plan.discount*100}}%</p>
                                </template>
                                <template v-if="plan.edit == false">
                                    <template v-if="plan.status == true">
                                        <button type="button" class="col-sm-1 btn btn-danger" v-on:click="planStatusFalse(plan);">停用</button>
                                    </template>
                                    <template v-else>
                                        <button type="button" class="col-sm-3 btn btn-primary" v-on:click="planStatusTrue(plan);">啟用</button>
                                    </template>
                                </template>
                                <template v-else>
                                    <button type="button" class="col-sm-1 btn btn-secondary" v-on:click="plan.edit = false;">取消</button>
                                </template>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container-fluid row py-2" style="display:flex;align-items: center;justify-content: center;">
            <button type="button" class="btn btn-primary col-md-2" data-bs-toggle="modal" data-bs-target="#createPlan">新增</button>
            <button type="button" class="btn btn-danger col-md-2" data-bs-toggle="modal" data-bs-target="#deletePlan">刪除</button>
        </div>
    </div>

    @* 編輯簡介 *@
    <div class="modal fade" id="editIntro" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="editIntroLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <template v-if="editIntroModal == false">
                        <h3 class="modal-title text-light" id="editIntroLabel">方案介紹</h3>
                    </template>
                    <template v-else>
                        <h3 class="modal-title text-light" id="editIntroLabel">編輯介紹</h3>
                    </template>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click="editIntroModal = false"></button>
                </div>
                <div class="modal-body">
                    <template v-if="editIntroModal == false">
                        <p class="h5" style="width:100%;word-break:break-all;">{{clickedPlanIntro}}</p>
                    </template>
                    <template v-else>
                        <textarea rows="8" cols="75" style="width:100%;overflow:auto;word-break:break-all;" v-model.trim="clickedPlanIntro">{{clickedPlanIntro}}</textarea>
                    </template>
                </div>
                <div class="modal-footer">
                    <template v-if="editIntroModal == false">
                        <button type="button" class="btn btn-warning text-light" v-on:click="editIntroModal = true">編輯</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="editIntroModal = false">關閉</button>
                    </template>
                    <template v-else>
                        <button type="button" class="btn btn-outline-warning" v-on:click="editIntro(clickedPlanIntroID,clickedPlanIntro)">儲存</button>
                        <button type="button" class="btn btn-secondary" v-on:click="editIntroModal = false">取消</button>
                    </template>
                </div>
            </div>
        </div>
    </div>

    @* 新增方案 *@
    <div class="modal fade" id="createPlan" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="createPlanLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-primary">
                    <h3 class="modal-title text-light" id="createPlanLabel">新增方案</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click=""></button>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" v-on:click="createPlan()">新增</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="">取消</button>
                </div>
            </div>
        </div>
    </div>

    @* 刪除方案 *@
    <div class="modal fade" id="deletePlan" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="deletePlanLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h3 class="modal-title text-light" id="deletePlanLabel">刪除方案</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" v-on:click=""></button>
                </div>
                <div class="modal-body">
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-bs-dismiss="modal" v-on:click="deletePlan();">刪除</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" v-on:click="">取消</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        let vueAppPricingPlans = {
            data() {
                return {
                    baseAddress: "https://localhost:7169",
                    alertText: "",
                    alertStatus: "",
                    pricingPlans: [],
                    clickedPlanIntroID: null,
                    clickedPlanIntro: "",
                    clickedPlanIntroOld: "",
                    editIntroModal: false,
                };
            },
            methods: {
                bootPage: function(){
                    axios.get(`${this.baseAddress}/Admins/PricingPlans/IndexPricingPlans`).then(
                        response => this.pricingPlans = response.data
                    ).catch(
                        err => { alert(err) });
                },
                planIDTitle:function(plan){
                    return `${plan.planID}${plan.Title}`;
                },
                planIDToID:function(planID){
                    return `${planID}EditIntro`;
                },
                editPricingPlans: function (plan) {
                    let str = "";
                    let emptyCount = 0;
                    if (plan.title == "") {
                        str += "方案名稱 ";
                        emptyCount++;
                    }
                    if (plan.duration == null) {
                        str += "方案天數 ";
                        emptyCount++;
                    }
                    if (plan.price == null) {
                        str += "價格 ";
                        emptyCount++;
                    }
                    if (plan.discount == null) {
                        str += "折扣 ";
                        emptyCount++;
                    }
                    if (emptyCount > 0) {
                        str += "不可為空 ";
                    } 
                    let wrongCount = 0;
                    if (plan.price <= 0) {
                        str += "價格不合法 ";
                        wrongCount++;
                    }
                    if (plan.discount > 1 || plan.discount <= 0) {
                        str += "折扣不合法 ";
                        wrongCount++;
                    }
                    if (emptyCount > 0 || wrongCount > 0) {
                        this.alertText = `${str}`;
                        this.alertStatus = "失敗";
                    }
                    else {
                        let request = {};
                        request.PlanID = plan.planID;
                        request.Title = plan.title;
                        request.Duration = plan.duration;
                        request.Price = plan.price;
                        request.Discount = plan.discount;
                        request.Status = plan.status;
                        axios.post(`${this.baseAddress}/Admins/PricingPlans/EditPricingPlans`, request, {
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        }).then(response => {
                            this.alertText = response.data[0];
                            this.alertStatus = response.data[1];
                            this.bootPage();
                            this.alertOut();
                        }).catch(err => { alert(err) });
                        plan.edit = false;
                    }
                },
                editIntro: function (clickedPlanIntroID,clickedPlanIntro) {
                    if (clickedPlanIntro == ""){
                        this.alertText = "方案介紹不可為空";
                        this.alertStatus = "失敗";
                        clickedPlanIntro = clickedPlanIntroOld;
                    }
                    else{
                        let request = {};
                        request.PlanID = clickedPlanIntroID;
                        request.Intro = clickedPlanIntro;
                        axios.post(`${this.baseAddress}/Admins/PricingPlans/EditIntro`, request, {
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        }).then(response => {
                            this.alertText = response.data[0];
                            this.alertStatus = response.data[1];
                            this.bootPage();
                            this.alertOut();
                        }).catch(err => { alert(err) });
                    }

                    this.editIntroModal = false;
                    this.alertOut();
                },
                planStatusFalse:function(plan){
                    axios.post(`${this.baseAddress}/Admins/PricingPlans/PlanStatusFalse`, plan.planID, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => {
                        this.alertText = response.data[0];
                        this.alertStatus = response.data[1];
                        this.bootPage();
                        $(`#${this.planIDTitle(plan)}ID`).removeAttr("style");
                        $(`#${this.planIDTitle(plan)}ID`).attr("style", "background-color: #e6e6e6");
                        this.alertOut();
                    }).catch(err => { alert(err) });
                },
                planStatusTrue:function(plan){
                    axios.post(`${this.baseAddress}/Admins/PricingPlans/PlanStatusTrue`, plan.planID, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => {
                        this.alertText = response.data[0];
                        this.alertStatus = response.data[1];
                        this.bootPage();
                        $(`#${this.planIDTitle(plan)}ID`).removeAttr("style");
                        $(`#${this.planIDTitle(plan)}ID`).attr("style", "background-color: white");
                        this.alertOut();
                    }).catch(err => { alert(err) });
                },
                createPlan: function () {
                    
                    
                    this.alertOut();
                },
                deletePlan: function () {

                    this.alertOut();
                },
                alertOut: function () {
                    let time = window.setTimeout((() => this.alertStatus = ""), 5000);
                },
            },
            mounted: function () {
                this.bootPage();
            },
        }
        let app = Vue.createApp(vueAppPricingPlans).mount("#PricingPlans");
    </script>
}