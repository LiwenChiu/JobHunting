@{
    ViewData["Title"] = "職缺收藏";
}

@section Styles
{

}

@* 收藏職缺 *@
<div class="container-fluid py-2" id="OpeningApp">
    <label>
        篩選關鍵字：
        <input type="text" class="mb-2" v-model.lazy="filter" v-on:keyup.enter="ReceiveOpeningData">
    </label>
    <div class="letters row">
        @* 職缺card *@
        <div class="col-md-3 mb-2" v-for="item in openings.slice(pageStart,pageEnd)">
            <div class="card" style="width: 18vw; height: 37vh;">
                <div class="card-body">
                    <div class="row">
                        <div class="col-10">
                            <span class="card-title mb-3">{{item.title}}</span>
                        </div>
                        @* 刪除收藏職缺 *@
                        <div class="col-2">
                            <button type="button" class="btn-close" aria-label="Close" v-on:click="deleteCandidateOpeningRelation(item)"></button>
                        </div>
                    </div>
                    <p class="card-text" style="margin-bottom: 7px;"><i class="fa-solid fa-caret-right mt-2"></i> 工作地點 : {{item.address}}</p>
                    <p class="card-text" style="margin-bottom: 7px;"><i class="fa-solid fa-caret-right"></i> 工作時間 : {{item.time}}</p>
                    <p class="card-text" style="margin-bottom: 7px;"><i class="fa-solid fa-caret-right"></i> 需求人數 : {{item.requiredNumber}}</p>
                    @* 職缺內容按鈕 *@
                </div>
                <div class="card-footer text-center" style="background-color:transparent">
                    <button type="button" data-bs-toggle="modal"
                            :data-bs-target="'#'+mergeID(item)" class="btn btn-primary" v-on:click="selectedOpeningId = item.openingId">
                        詳細
                    </button>
                </div>
            </div>
        </div>

        @* 職缺內容Modal *@
        <div class="modal fade" v-for="item in openings"
             :id="mergeID(item)"
             tabindex="-1"
             data-bs-keyboard="false"
             role="dialog"
             aria-labelledby="modalTitleId"
             aria-hidden="true">
            <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-xl"
                 role="document">
                <div class="modal-content col-md-4">
                    @* 職缺顯示 *@
                    <div class="modal-header" style="background-color: #f7d179;">
                        <h3 class="modal-title text-center text-light" id="modal" style="width:80%">
                            {{item.title}}
                        </h3>
                        <span class="text-light">已有: {{item.resumeNumber}}人投遞履歷</span>
                        <button type="button"
                                class="btn-close"
                                data-bs-dismiss="modal"
                                aria-label="Close"
                                style="width:5% ;" v-on:click="applyJobYN = false">
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="container-fluid">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="">職缺名稱:</label>
                                        <p>{{item.title}}</p>
                                        <label class="">公司名稱:</label>
                                        <p>{{item.companyName}}</p>
                                        <label class="">需求人數:</label>
                                        <p>{{item.requiredNumber}}</p>
                                        <label class="">工作地點:</label>
                                        <p>{{item.address}}</p>
                                        <label class="">連絡人:</label>
                                        <p>{{item.contactName}}</p>
                                        <label class="">連絡電話:</label>
                                        <p>{{item.contactPhone}}</p>
                                        <label class="">電子郵件:</label>
                                        <p>{{item.contactEmail}}</p>
                                        <label class="">薪資條件:</label>
                                        <p>{{item.salaryMin}} - {{item.salaryMax}}</p>
                                        <label class="">上班時段:</label>
                                        <p>{{item.time}}</p>
                                    </div>
                                    <div class="mb-3">
                                        <label class="">職缺類別:</label>
                                        <p>
                                            {{ getTitleClassName(item.titleClassId) }}
                                        </p>
                                        <label class="">學歷要求:</label><span>{{item.degree}}</span>
                                    </div>
                                    <div>
                                        <label class="">能力標籤:</label>
                                        <p>
                                            {{ getTagName(item.tagId) }}
                                        </p>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label for="form-textarea" class="col-form-label">福利:</label>
                                        <p style="height:200px">{{item.benefits}}</p>
                                    </div>
                                    <div class="mb-3">
                                        <label for="form-textarea" class="col-form-label">工作內容:</label>
                                        <p style="height:200px">{{item.description}}</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <template v-if="applyJobYN == false">
                            <button type="button" class="btn btn-primary" v-on:click="getResumes()">應徵</button>
                        </template>
                        <template v-else>
                            <label>{{alertTextGetData}}</label>
                            <select v-model="selectedResumeId">
                                <option v-for="resume in resumes" v-bind:value="resume.resumeId">{{resume.resumeTitle}}</option>
                            </select>
                            <button class="btn btn-primary" v-on:click="applyJob()">確認送出</button>
                            <button class="btn btn-secondary" v-on:click="cancelApplyJob()">取消</button>
                        </template>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @* 沒有驗證信件or完整填寫會員資料Modal *@
    <div class="modal fade" id="turnPageToMemberModal" data-bs-keyboard="false" tabindex="-1" aria-labelledby="turnPageToMemberModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-warning">
                    <h3 class="modal-title text-light" id="turnPageToMemberModalLabel">尚未{{alertTextGetData}}</h3>
                </div>
                <div class="modal-body">
                    <h5>請問是否移動至 會員資料 頁面 {{alertTextGetData}}?</h5>
                </div>
                <div class="modal-footer">
                    <form asp-area="Candidates" asp-controller="Member" asp-action="TurnPageToMember" method="get">
                        <button type="submit" class="btn btn-warning text-light" data-bs-dismiss="modal">移動頁面</button>
                    </form>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                </div>
            </div>
        </div>
    </div>


    <div>
        @* 分頁 *@
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center" style="margin-bottom: 0;">
                <li class="page-item" v-on:click="setPage(currentPage-1)">
                    <a class="page-link" href="#" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                <li v-for="item in totalPage" class="page-item" v-on:click="setPage(item)">
                    <a class="page-link" href="#">{{item}}</a>
                </li>
                <li class="page-item" v-on:click="setPage(currentPage+1)">
                    <a class="page-link" href="#" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@section Scripts
{
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script>
        let VueApp = {
            data() {
                return {
                    //baseAddress: "https://duckjobhunting.azurewebsites.net",
                    baseAddress: "https://localhost:7169",
                    openings: [],
                    titleClass: [],
                    titleCategory: [],
                    Tags: [],
                    TagClasses: [],
                    filter: '',

                    //分頁
                    pageStatus: 0,
                    perpage: 8, //一頁的資料數
                    currentPage: 1,
                    MessageStatus: 1,

                    applyJobYN: false,
                    resumes: [],
                    selectedOpeningId: null,
                    selectedResumeId: null,

                    alertStatus: null,
                    alertTextGetData: "",

                    emptyCandidateDataModalId: null,
                };
            },
            computed: {
                totalPage() {
                    return Math.ceil(this.openings.length / this.perpage)
                    //Math.ceil()取最小整數
                },
                pageStart() {
                    return (this.currentPage - 1) * this.perpage
                    //取得該頁第一個值的index
                },
                pageEnd() {
                    return this.currentPage * this.perpage
                    //取得該頁最後一個值的index
                },
            },
            methods: {
                setPage(page) {
                    if (page <= 0 || page > this.totalPage) {
                        return
                    }
                    this.currentPage = page
                },
                filterTagClass: function (ClassID) {
                    let _this = this;
                    return _this.Tags.filter(function (item) {
                        return item.TagClassID == ClassID;
                    });
                },
                ReturnhashtagID: function (item) {
                    return `#${item.TagClass}`;
                },
                changeTagNameTo: function (TagName) {
                    let _this = this;
                    return `${TagName}BindID`;
                },
                //綁modal target
                mergeID(item) {
                    let str = item.title.replace(/\s/g, "").replace(/\#/g,"");
                    let num = item.openingId;
                    strID = "Fa" + str + num;
                    return strID;
                },
                //列出所有被選到的職業類別
                getTitleClassName(titleClassId) {
                    if (!Array.isArray(titleClassId)) return '未指定';
                    return titleClassId
                        .map(id => {
                            let titleClassItem = this.titleClass.find(item => item.titleClassId == id);
                            return titleClassItem ? titleClassItem.titleClassName : '未指定';
                        })
                        .join('/ ');
                },
                //列出所有被選到的能力標籤
                getTagName(tagId) {
                    if (!Array.isArray(tagId)) return '未指定';
                    return tagId
                        .map(id => {
                            let tagItem = this.Tags.find(item => item.tagId == id);
                            return tagItem ? tagItem.tagName : '未指定';
                        })
                        .join('/ ');
                },
                //資料初始
                ReceiveOpeningData() {
                    let _this = this;
                    var request = {
                        Title: _this.filter,
                        Address: _this.filter,
                        Time: _this.filter
                    }
                    axios.post(`${_this.baseAddress}/Candidates/OpeningStorage/CandidateOpenings`, request, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => _this.openings = response.data)
                        .catch(err => alert(err));


                    axios.get(`${_this.baseAddress}/Candidates/OpeningStorage/TitleClassJson`).then(
                        res => {
                            _this.titleClass = res.data;
                        }
                    ).catch(
                        err => { alert(err) }
                    );

                    axios.get(`${_this.baseAddress}/Candidates/OpeningStorage/TitleCategoryJson`).then(
                        res => {
                            _this.titleCategory = res.data;
                        }
                    ).catch(
                        err => { alert(err) }
                    );

                    axios.get(`${_this.baseAddress}/Candidates/OpeningStorage/TagJson`).then(
                        res => _this.Tags = res.data
                    ).catch(
                        err => { alert(err) }
                    );

                    axios.get(`${_this.baseAddress}/Candidates/OpeningStorage/TagClassJson`).then(
                        res => _this.TagClasses = res.data
                    ).catch(
                        err => { alert(err) }
                    );
                },
                //刪除收藏職缺
                deleteCandidateOpeningRelation(item) {
                    let request = {
                        OpeningId: item.openingId,
                    }
                    axios.post(`${this.baseAddress}/Candidates/OpeningStorage/RemoveCdOpRelation`, request, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => {
                        alert(response.data.message);
                        this.ReceiveOpeningData(); // 刷新資料
                    })
                        .catch(err => {
                            alert(err);
                        });
                },
                //拿求職者履歷
                getResumes: function () {
                    axios.get(`${this.baseAddress}/Candidates/OpeningStorage/GetCandidateData`,
                        {
                            headers: {
                                "Content-Type": "application/json",
                            },
                        })
                        .then(response => {
                            if (response.data.dataStatus) {
                                this.chooseResume();
                                this.alertTextGetData = response.data.alertText;
                            }
                            else if (!response.data.dataStatus) {
                                this.alertTextGetData = response.data.alertText;
                                $("#turnPageToMemberModal").modal("show");
                            }
                            else {
                                alert(response.data.alertText);
                            }
                        })
                        .catch(err => { alert(err) });
                },
                chooseResume: function () {
                    this.applyJobYN = true;
                    axios.get(`${this.baseAddress}/Candidates/OpeningStorage/ResumesJson`,
                        {
                            headers: {
                                "Content-Type": "application/json",
                            },
                        })
                        .then(response => this.resumes = response.data)
                        .catch(err => { alert(err) });
                },
                applyJob: function () {
                    let request = {};
                    request.resumeId = this.selectedResumeId;
                    request.openingId = this.selectedOpeningId;
                    axios.post(`${this.baseAddress}/Candidates/OpeningStorage/ApplyJob`, request, {
                        headers: {
                            "Content-Type": "application/json",
                        }
                    })
                        .then(response => {
                            alert(response.data.alertText);
                            this.alertStatus = response.data.alertStatus;
                            this.ReceiveOpeningData();
                        })
                        .catch(err => { alert(err) })
                        .finally(() => this.applyJobYN = false);
                },
                cancelApplyJob: function () {
                    this.applyJobYN = false;
                    this.selectedResumeId = null;
                },
            },
            mounted() {
                this.ReceiveOpeningData();
                console.log(this.$router);
            },
        };
        let app = Vue.createApp(VueApp).mount("#OpeningApp");
    </script>
}