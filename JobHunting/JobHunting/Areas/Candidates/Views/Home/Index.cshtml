@model IEnumerable<JobHunting.Areas.Candidates.Models.Candidate>

@{
    ViewData["Title"] = "會員中心";
}

@section Styles
{
    <style>
        /*  #headshotBtn{
                    visibility: hidden;
                }

                #headshotBtn:hover{
                    visibility: visible;
                } */
    </style>
}


<div class="container py-2" id="indexApp" style="position: relative">

    @* 通知 *@
    <template v-if="alertStatus == '成功'">
        <div id="alert" class="alert alert-primary alert-dismissible fade show" role="alert" style="position: absolute; z-index:100;">
            <strong>{{alertText}}</strong>
            <button type="button" class="btn-close" aria-label="Close" v-on:click="alertStatus=''"></button>
        </div>
    </template>
    <template v-else-if="alertStatus == '失敗'">
        <div id="alert" class="alert alert-danger alert-dismissible fade show" role="alert" style="position: absolute; z-index:100;">
            <strong>{{alertText}}</strong>
            <button type="button" class="btn-close" aria-label="Close" v-on:click="alertStatus=''"></button>
        </div>
    </template>

    <div class="row">
        <div class="col-lg-4">
            <div class="card mb-1">
                <div class="card-body text-center">
                    <div >
                        @* 變更照片modalBtn *@
                        <div>
                            <button type="button" id="headshotBtn" class="astext" 
                                data-bs-toggle="modal" data-bs-target="#modalId">
                                <img alt="avatar" class="img-thumbnail img-fluid" style="width: 60%"
                                     v-bind:src="CandidateMemberData.imgUrl"
                                     v-bind:title="CandidateMemberData.Name"
                                     />
                            </button>
                        </div>

                        @* 意見信件modal *@
                        <div class="modal fade" id="modalId" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog"
                             aria-labelledby="modalTitleId" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg" role="document">
                                <div class="modal-content">
                                    <div class="modal-header bg-warning ">
                                        <h3 class="text-center" style="width:95%">變更照片</h3>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <div class="container bg-light" style="border-radius: 30px;">
                                            <div class="inputOutAreas" style="width:80%">                              
                                                <div class="d-sm-flex my-1 py-3 inputAreas justify-content-around">
                                                    <img src="~/images/no_image_available.jpg" class="img-fluid" style="width:50%" />
                                                </div>
                                                <div class="d-sm-flex my-1 py-3 inputAreas justify-content-around">
                                                    <input id="insertFile" type="file" accept="image/*" class="form-control" v-on:change="insertFileChange($event.target)" />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button id="insert" type="button"
                                                class="btn btn-primary"
                                                data-bs-dismiss="modal"
                                                v-on:click="insertHeadshot">
                                            送出
                                        </button>
                                        <button type="button"
                                                class="btn btn-warning"
                                                data-bs-dismiss="modal"
                                                v-on:click="Createcancel">
                                            取消
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>






                    <div>
                        <h5 class="my-1 form-label">{{CandidateMemberData.name}}</h5>
                        <template v-if="titleClassEdit == false">
                            <p class="text-muted mb-1">{{CandidateMemberData.titleClass}}<button type="button" class="px-1 astext" v-on:click="titleClassEdit = true"><i class="fa-solid fa-pen"></i></button></p>
                        </template>
                        <template v-else>
                            <input type="text" placeholder="請輸入您的職業" v-model="CandidateMemberData.titleClass" />
                            <button type="button" class="px-1 astext" v-on:click="changeTitleClass()"><i class="fa-solid fa-floppy-disk"></i></button>
                            <button type="button" class="px-1 astext" v-on:click="cancelChangeTitleClass()"><i class="fa-regular fa-rectangle-xmark"></i></button>
                        </template>
                        <p class="text-muted mb-4">台灣</p>
                    </div>
                    
                </div>
            </div>
            <div class="card mb-1 mb-lg-0">
                <div class="card-body p-0">
                    <ul class="list-group list-group-flush rounded-3">
                        <li class="list-group-item d-flex justify-content-between align-items-center p-3">
                            <i class="fas fa-globe fa-lg text-warning"></i>
                            <p class="mb-0">https://mdbootstrap.com</p>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center p-3">
                            <i class="fab fa-github fa-lg text-body"></i>
                            <p class="mb-0">mdbootstrap</p>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center p-3">
                            <i class="fab fa-twitter fa-lg" style="color: #55acee;"></i>
                            <p class="mb-0">mdbootstrap</p>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center p-3">
                            <i class="fab fa-instagram fa-lg" style="color: #ac2bac;"></i>
                            <p class="mb-0">mdbootstrap</p>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-lg-8">
            <div class="card mb-2">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">姓名</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">{{CandidateMemberData.name}}</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">電子信箱</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">{{CandidateMemberData.email}}</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">手機號碼</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">{{CandidateMemberData.phone}}</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">住址</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">{{CandidateMemberData.address}}</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">就業狀態</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">{{CandidateMemberData.employmentStatus}}</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="card mb-4 mb-md-0 h-100">
                        <div class="card-body">
                            <span class="text-primary font-italic me-1" style="font-size:20px">我的</span>
                            <a class="astext" style="font-size:1.25rem; font-weight:bold; text-decoration:none" asp-area="Candidates" asp-controller="Resume" asp-action="ResumeManage">
                                履歷
                            </a>
                            <div class="row row-cols-1 row-cols-md-1 g-4">
                                <template v-for="Resume in CandidateResumes">
                                    <div class="col">
                                        <div class="card overcard h-100">
                                            <div class="card-body">
                                                <p class="card-title">{{Resume.title}}</p>
                                            </div>
                                        </div>
                                    </div>
                                </template>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card mb-4 mb-md-0 h-100">
                        <div class="card-body">
                            <span class="text-primary font-italic me-1" style="font-size:20px">收藏</span>
                            <a class="astext" style="font-size:1.25rem; font-weight:bold; text-decoration:none" asp-area="Candidates" asp-controller="OpeningStorage" asp-action="index">
                                職缺
                            </a>
                            <div class="row row-cols-1 row-cols-md-1 g-4">
                                <template v-for="Opening in CandidateOpeningLikeRecords">
                                    <div class="col">
                                        <div class="card overcard h-100">
                                            <div class="card-body">
                                                <p class="card-title">{{Opening.openingTitle}}</p>
                                            </div>
                                        </div>
                                    </div>
                                </template>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script>
        let VueApp = {
            data() {
                return {
                    baseAddress: "https://localhost:7169",
                    CandidateMemberData: {},
                    CandidateResumes: [],
                    CandidateOpeningLikeRecords: [],
                    titleClassEdit: false,
                    alertText: "",                                                                                                                                                                                                                                          
                    alertStatus: "",
                    imgUrl: "",
                    imgKey:0,
                };
            },
            methods: {
                getCandidateMemberData: function () {
                    axios.post(`${this.baseAddress}/Candidates/Home/GetCandidateMemberData`, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => {
                        this.CandidateMemberData = response.data;
                        this.imgUrl = response.data.imgUrl;
                    })
                        .catch(err => alert(err));
                },
                getCandidateResumes: function () {
                    axios.post(`${this.baseAddress}/Candidates/Home/GetCandidateResumes`, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => this.CandidateResumes = response.data)
                        .catch(err => alert(err));
                },
                getCandidateOpeningLikeRecords: function () {
                    axios.post(`${this.baseAddress}/Candidates/Home/GetCandidateOpeningLikeRecords`, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => this.CandidateOpeningLikeRecords = response.data)
                        .catch(err => alert(err));
                },
                setPage(page) {
                    if (page <= 0 || page > this.totalPage) {
                        return
                    }
                    this.currentPage = page
                },
                filterTagClass: function (ClassID) {
                    let _this = this;
                    return _this.Tags.filter(function (item) {
                        return item.TagClassID == ClassID;
                    });
                },
                ReturnhashtagID: function (item) {
                    return `#${item.TagClass}`;
                },
                changeTagNameTo: function (TagName) {
                    let _this = this;
                    return `${TagName}BindID`;
                },
                changeTitleClass: function () {
                    let request = {};
                    request.TitleClass = this.CandidateMemberData.titleClass;
                    axios.post(`${this.baseAddress}/Candidates/Home/ChangeTitleClass`, request, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => {
                        this.alertText = response.data[0];
                        this.alertStatus = response.data[1];
                        this.titleClassEdit = false;
                        this.getCandidateMemberData();
                        this.alertOut();
                    })
                },
                cancelChangeTitleClass: function () {
                    this.getCandidateMemberData();
                    this.titleClassEdit = false;
                },
                alertOut: function () {
                    let time = window.setTimeout((() => this.alertStatus = ""), 5000);
                },


                insertHeadshot: function()
                {
                    let _this=this;
                    var form = new FormData();
                    form.append("ImageFile",document.querySelector("#insertFile").files[0]);
                    axios.post(`${_this.baseAddress}/Candidates/Home/InsertHeadshot`, form,
                    { headers: { 'Content-Type': 'multipart/form-data' } } )
                    .then(response => {
                        this.imgKey++;
                        this.CandidateMemberData.imgUrl = `${this.imgUrl}&t${this.imgKey}`;
                        alert(response.data);
                    }).catch(err => { alert(err); });

                },


                insertFileChange: function (file) 
                {
                    let _this = this;
                    _this.readURL(file, file.parentElement.previousElementSibling.firstChild, $("#insert"))
                },

                readURL: function (input,img,btn) {
                    if (input.files && input.files[0]) 
                    {
                        var imageType = "image.*";
                        if (input.files[0].type.match(imageType)) {
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                img.src = e.target.result;
                            };
                            reader.readAsDataURL(input.files[0])
                            btn.prop("disabled", false);
                        } 
                        else {
                            alert("不支援的上傳格式");
                            btn.prop("disabled", true);
                        }
                    }

                },

                Createcancel(){
                    window.location.reload()
                },

            },
            mounted: function () {
                this.getCandidateMemberData();
                this.getCandidateResumes();
                this.getCandidateOpeningLikeRecords();
            },
        };
        let app = Vue.createApp(VueApp).mount("#indexApp");
    </script>
}