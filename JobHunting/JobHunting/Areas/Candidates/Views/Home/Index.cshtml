@model IEnumerable<JobHunting.Areas.Candidates.Models.Candidate>

@{
    ViewData["Title"] = "會員中心";
}

@section Styles
{
    <style>
        input[type="file"] {
            display: none;
        }

        .uploadStyle {
            
        }
    </style>
}


<div class="container py-2" id="indexApp" style="position: relative">

    @* 通知 *@
    <template v-if="alertStatus == '成功'">
        <div id="alert" class="alert alert-primary alert-dismissible fade show" role="alert" style="position: absolute; z-index:100;">
            <strong>{{alertText}}</strong>
            <button type="button" class="btn-close" aria-label="Close" v-on:click="alertStatus=''"></button>
        </div>
    </template>
    <template v-else-if="alertStatus == '失敗'">
        <div id="alert" class="alert alert-danger alert-dismissible fade show" role="alert" style="position: absolute; z-index:100;">
            <strong>{{alertText}}</strong>
            <button type="button" class="btn-close" aria-label="Close" v-on:click="alertStatus=''"></button>
        </div>
    </template>

    <div class="row">
        <div class="col-lg-4">
            <div class="card mb-1">
                <div class="card-body text-center">
                    <div style="position: relative">
                        <div style="position: absolute; z-index:70;">
                            <input id="upload" type="file">
                            <label type="button" for="upload" class="uploadStyle">
                                更改圖片
                            </label>
                        </div>
                        <img src="~/images/pepethefrog.jpg" alt="avatar" class="img-thumbnail img-fluid" style="width: 60%;" />
                    </div>
                    <h5 class="my-1">{{CandidateMemberData.name}}</h5>
                    <template v-if="titleClassEdit == false">
                        <p class="text-muted mb-1">{{CandidateMemberData.titleClass}}<button type="button" class="px-1 astext" v-on:click="titleClassEdit = true"><i class="fa-solid fa-pen"></i></button></p>
                    </template>
                    <template v-else>
                        <input type="text" placeholder="請輸入您的職業" v-model="CandidateMemberData.titleClass" />
                        <button type="button" class="px-1 astext" v-on:click="changeTitleClass()"><i class="fa-solid fa-floppy-disk"></i></button>
                        <button type="button" class="px-1 astext" v-on:click="cancelChangeTitleClass()"><i class="fa-regular fa-rectangle-xmark"></i></button>
                        
                    </template>
                    <p class="text-muted mb-4">台灣</p>
                </div>
            </div>
            <div class="card mb-1 mb-lg-0">
                <div class="card-body p-0">
                    <ul class="list-group list-group-flush rounded-3">
                        <li class="list-group-item d-flex justify-content-between align-items-center p-3">
                            <i class="fas fa-globe fa-lg text-warning"></i>
                            <p class="mb-0">https://mdbootstrap.com</p>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center p-3">
                            <i class="fab fa-github fa-lg text-body"></i>
                            <p class="mb-0">mdbootstrap</p>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center p-3">
                            <i class="fab fa-twitter fa-lg" style="color: #55acee;"></i>
                            <p class="mb-0">mdbootstrap</p>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center p-3">
                            <i class="fab fa-instagram fa-lg" style="color: #ac2bac;"></i>
                            <p class="mb-0">mdbootstrap</p>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-lg-8">
            <div class="card mb-2">
                <div class="card-body">
                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">姓名</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">{{CandidateMemberData.name}}</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">電子信箱</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">{{CandidateMemberData.email}}</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">手機號碼</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">{{CandidateMemberData.phone}}</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">住址</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">{{CandidateMemberData.address}}</p>
                        </div>
                    </div>
                    <hr>
                    <div class="row">
                        <div class="col-sm-3">
                            <p class="mb-0">就業狀態</p>
                        </div>
                        <div class="col-sm-9">
                            <p class="text-muted mb-0">{{CandidateMemberData.employmentStatus}}</p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="card mb-4 mb-md-0 h-100">
                        <div class="card-body">
                            <button type="button" class="mb-2 astext" v-on:click="function(){pageStatus=2}">
                                <h4>
                                    <span class="text-primary font-italic me-1">我的</span>履歷
                                </h4>
                            </button>
                            <div class="row row-cols-1 row-cols-md-1 g-4">
                                <template v-for="Resume in CandidateResumes">
                                    <div class="col">
                                        <div class="card overcard h-100">
                                            <div class="card-body">
                                                <p class="card-title">{{Resume.title}}</p>
                                            </div>
                                        </div>
                                    </div>
                                </template>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card mb-4 mb-md-0 h-100">
                        <div class="card-body">
                            <button type="button" class="mb-2 astext" v-on:click="function(){pageStatus=3}">
                                <h4>
                                    <span class="text-primary font-italic me-1">收藏</span>職缺
                                </h4>
                            </button>
                            <div class="row row-cols-1 row-cols-md-1 g-4">
                                <template v-for="Opening in CandidateOpeningLikeRecords">
                                    <div class="col">
                                        <div class="card overcard h-100">
                                            <div class="card-body">
                                                <p class="card-title">{{Opening.openingTitle}}</p>
                                            </div>
                                        </div>
                                    </div>
                                </template>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts
{
    <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    <script>
        let VueApp = {
            data() {
                return {
                    baseAddress: "https://localhost:7169",
                    CandidateId: 1,
                    CandidateMemberData: {},
                    CandidateResumes: [],
                    CandidateOpeningLikeRecords: [],
                    titleClassEdit: false,
                    alertText: "",
                    alertStatus: "",
                };
            },
            methods: {
                getCandidateMemberData:function(){
                    axios.post(`${this.baseAddress}/Candidates/Home/GetCandidateMemberData`, this.CandidateId, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => this.CandidateMemberData = response.data)
                        .catch(err => alert(err));
                },
                getCandidateResumes: function () {
                    axios.post(`${this.baseAddress}/Candidates/Home/GetCandidateResumes`, this.CandidateId, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => this.CandidateResumes = response.data)
                        .catch(err => alert(err));
                },
                getCandidateOpeningLikeRecords: function () {
                    axios.post(`${this.baseAddress}/Candidates/Home/GetCandidateOpeningLikeRecords`, this.CandidateId, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => this.CandidateOpeningLikeRecords = response.data)
                        .catch(err => alert(err));
                },
                setPage(page) {
                    if (page <= 0 || page > this.totalPage) {
                        return
                    }
                    this.currentPage = page
                },
                filterTagClass:function(ClassID) {
                    let _this = this;
                    return _this.Tags.filter(function (item) {
                        return item.TagClassID == ClassID;
                    });
                },
                ReturnhashtagID:function(item){
                    return `#${item.TagClass}`;
                },
                changeTagNameTo: function (TagName) {
                    let _this = this;
                    return `${TagName}BindID`;
                },
                changeTitleClass: function () {
                    let request = {};
                    request.CandidateId = this.CandidateId;
                    request.TitleClass = this.CandidateMemberData.titleClass;
                    axios.post(`${this.baseAddress}/Candidates/Home/ChangeTitleClass`, request, {
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    }).then(response => {
                        this.alertText = response.data[0];
                        this.alertStatus = response.data[1];
                        this.titleClassEdit = false;
                        this.getCandidateMemberData();
                        this.alertOut();
                    })
                },
                cancelChangeTitleClass:function(){
                    this.getCandidateMemberData();
                    this.titleClassEdit = false;
                },
                alertOut: function () {
                    let time = window.setTimeout((() => this.alertStatus = ""), 5000);
                },
            },
            mounted:function(){
                this.getCandidateMemberData();
                this.getCandidateResumes();
                this.getCandidateOpeningLikeRecords();
            },
        };
        let app = Vue.createApp(VueApp).mount("#indexApp");
    </script>
}